/*
* generated by Xtext
*/
grammar InternalFastBpmn;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package com.laegler.fastbpmn.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package com.laegler.fastbpmn.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import com.laegler.fastbpmn.services.FastBpmnGrammarAccess;

}

@parser::members {
 
 	private FastBpmnGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(FastBpmnGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleFDocumentRoot
entryRuleFDocumentRoot 
:
{ before(grammarAccess.getFDocumentRootRule()); }
	 ruleFDocumentRoot
{ after(grammarAccess.getFDocumentRootRule()); } 
	 EOF 
;

// Rule FDocumentRoot
ruleFDocumentRoot
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFDocumentRootAccess().getGroup()); }
(rule__FDocumentRoot__Group__0)
{ after(grammarAccess.getFDocumentRootAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleFProcessPackageDecl
entryRuleFProcessPackageDecl 
:
{ before(grammarAccess.getFProcessPackageDeclRule()); }
	 ruleFProcessPackageDecl
{ after(grammarAccess.getFProcessPackageDeclRule()); } 
	 EOF 
;

// Rule FProcessPackageDecl
ruleFProcessPackageDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFProcessPackageDeclAccess().getGroup()); }
(rule__FProcessPackageDecl__Group__0)
{ after(grammarAccess.getFProcessPackageDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFProcess
entryRuleFProcess 
:
{ before(grammarAccess.getFProcessRule()); }
	 ruleFProcess
{ after(grammarAccess.getFProcessRule()); } 
	 EOF 
;

// Rule FProcess
ruleFProcess
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFProcessAccess().getGroup()); }
(rule__FProcess__Group__0)
{ after(grammarAccess.getFProcessAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFPool
entryRuleFPool 
:
{ before(grammarAccess.getFPoolRule()); }
	 ruleFPool
{ after(grammarAccess.getFPoolRule()); } 
	 EOF 
;

// Rule FPool
ruleFPool
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFPoolAccess().getGroup()); }
(rule__FPool__Group__0)
{ after(grammarAccess.getFPoolAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFFlowNode
entryRuleFFlowNode 
:
{ before(grammarAccess.getFFlowNodeRule()); }
	 ruleFFlowNode
{ after(grammarAccess.getFFlowNodeRule()); } 
	 EOF 
;

// Rule FFlowNode
ruleFFlowNode
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFFlowNodeAccess().getAlternatives()); }
(rule__FFlowNode__Alternatives)
{ after(grammarAccess.getFFlowNodeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFLane
entryRuleFLane 
:
{ before(grammarAccess.getFLaneRule()); }
	 ruleFLane
{ after(grammarAccess.getFLaneRule()); } 
	 EOF 
;

// Rule FLane
ruleFLane
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFLaneAccess().getGroup()); }
(rule__FLane__Group__0)
{ after(grammarAccess.getFLaneAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFEvent
entryRuleFEvent 
:
{ before(grammarAccess.getFEventRule()); }
	 ruleFEvent
{ after(grammarAccess.getFEventRule()); } 
	 EOF 
;

// Rule FEvent
ruleFEvent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFEventAccess().getGroup()); }
(rule__FEvent__Group__0)
{ after(grammarAccess.getFEventAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFActivity
entryRuleFActivity 
:
{ before(grammarAccess.getFActivityRule()); }
	 ruleFActivity
{ after(grammarAccess.getFActivityRule()); } 
	 EOF 
;

// Rule FActivity
ruleFActivity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFActivityAccess().getAlternatives()); }
(rule__FActivity__Alternatives)
{ after(grammarAccess.getFActivityAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFTask
entryRuleFTask 
:
{ before(grammarAccess.getFTaskRule()); }
	 ruleFTask
{ after(grammarAccess.getFTaskRule()); } 
	 EOF 
;

// Rule FTask
ruleFTask
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFTaskAccess().getGroup()); }
(rule__FTask__Group__0)
{ after(grammarAccess.getFTaskAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFCallActivity
entryRuleFCallActivity 
:
{ before(grammarAccess.getFCallActivityRule()); }
	 ruleFCallActivity
{ after(grammarAccess.getFCallActivityRule()); } 
	 EOF 
;

// Rule FCallActivity
ruleFCallActivity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFCallActivityAccess().getGroup()); }
(rule__FCallActivity__Group__0)
{ after(grammarAccess.getFCallActivityAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFSubProcess
entryRuleFSubProcess 
:
{ before(grammarAccess.getFSubProcessRule()); }
	 ruleFSubProcess
{ after(grammarAccess.getFSubProcessRule()); } 
	 EOF 
;

// Rule FSubProcess
ruleFSubProcess
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFSubProcessAccess().getGroup()); }
(rule__FSubProcess__Group__0)
{ after(grammarAccess.getFSubProcessAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFGateway
entryRuleFGateway 
:
{ before(grammarAccess.getFGatewayRule()); }
	 ruleFGateway
{ after(grammarAccess.getFGatewayRule()); } 
	 EOF 
;

// Rule FGateway
ruleFGateway
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFGatewayAccess().getAlternatives()); }
(rule__FGateway__Alternatives)
{ after(grammarAccess.getFGatewayAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFGatewayDiverging
entryRuleFGatewayDiverging 
:
{ before(grammarAccess.getFGatewayDivergingRule()); }
	 ruleFGatewayDiverging
{ after(grammarAccess.getFGatewayDivergingRule()); } 
	 EOF 
;

// Rule FGatewayDiverging
ruleFGatewayDiverging
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFGatewayDivergingAccess().getGroup()); }
(rule__FGatewayDiverging__Group__0)
{ after(grammarAccess.getFGatewayDivergingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFGatewayConverging
entryRuleFGatewayConverging 
:
{ before(grammarAccess.getFGatewayConvergingRule()); }
	 ruleFGatewayConverging
{ after(grammarAccess.getFGatewayConvergingRule()); } 
	 EOF 
;

// Rule FGatewayConverging
ruleFGatewayConverging
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFGatewayConvergingAccess().getGroup()); }
(rule__FGatewayConverging__Group__0)
{ after(grammarAccess.getFGatewayConvergingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFOptionFlowNode
entryRuleFOptionFlowNode 
:
{ before(grammarAccess.getFOptionFlowNodeRule()); }
	 ruleFOptionFlowNode
{ after(grammarAccess.getFOptionFlowNodeRule()); } 
	 EOF 
;

// Rule FOptionFlowNode
ruleFOptionFlowNode
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFOptionFlowNodeAccess().getAlternatives()); }
(rule__FOptionFlowNode__Alternatives)
{ after(grammarAccess.getFOptionFlowNodeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFOption
entryRuleFOption 
:
{ before(grammarAccess.getFOptionRule()); }
	 ruleFOption
{ after(grammarAccess.getFOptionRule()); } 
	 EOF 
;

// Rule FOption
ruleFOption
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFOptionAccess().getGroup()); }
(rule__FOption__Group__0)
{ after(grammarAccess.getFOptionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFAttachment
entryRuleFAttachment 
:
{ before(grammarAccess.getFAttachmentRule()); }
	 ruleFAttachment
{ after(grammarAccess.getFAttachmentRule()); } 
	 EOF 
;

// Rule FAttachment
ruleFAttachment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFAttachmentAccess().getAlternatives()); }
(rule__FAttachment__Alternatives)
{ after(grammarAccess.getFAttachmentAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleFSendMessage
entryRuleFSendMessage 
:
{ before(grammarAccess.getFSendMessageRule()); }
	 ruleFSendMessage
{ after(grammarAccess.getFSendMessageRule()); } 
	 EOF 
;

// Rule FSendMessage
ruleFSendMessage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFSendMessageAccess().getGroup()); }
(rule__FSendMessage__Group__0)
{ after(grammarAccess.getFSendMessageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFSendData
entryRuleFSendData 
:
{ before(grammarAccess.getFSendDataRule()); }
	 ruleFSendData
{ after(grammarAccess.getFSendDataRule()); } 
	 EOF 
;

// Rule FSendData
ruleFSendData
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFSendDataAccess().getGroup()); }
(rule__FSendData__Group__0)
{ after(grammarAccess.getFSendDataAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFDataIO
entryRuleFDataIO 
:
{ before(grammarAccess.getFDataIORule()); }
	 ruleFDataIO
{ after(grammarAccess.getFDataIORule()); } 
	 EOF 
;

// Rule FDataIO
ruleFDataIO
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFDataIOAccess().getGroup()); }
(rule__FDataIO__Group__0)
{ after(grammarAccess.getFDataIOAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFAnnotation
entryRuleFAnnotation 
:
{ before(grammarAccess.getFAnnotationRule()); }
	 ruleFAnnotation
{ after(grammarAccess.getFAnnotationRule()); } 
	 EOF 
;

// Rule FAnnotation
ruleFAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFAnnotationAccess().getGroup()); }
(rule__FAnnotation__Group__0)
{ after(grammarAccess.getFAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFDocumentation
entryRuleFDocumentation 
:
{ before(grammarAccess.getFDocumentationRule()); }
	 ruleFDocumentation
{ after(grammarAccess.getFDocumentationRule()); } 
	 EOF 
;

// Rule FDocumentation
ruleFDocumentation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFDocumentationAccess().getGroup()); }
(rule__FDocumentation__Group__0)
{ after(grammarAccess.getFDocumentationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFFlow
entryRuleFFlow 
:
{ before(grammarAccess.getFFlowRule()); }
	 ruleFFlow
{ after(grammarAccess.getFFlowRule()); } 
	 EOF 
;

// Rule FFlow
ruleFFlow
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFFlowAccess().getGroup()); }
(rule__FFlow__Group__0)
{ after(grammarAccess.getFFlowAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFSequenceFlow
entryRuleFSequenceFlow 
:
{ before(grammarAccess.getFSequenceFlowRule()); }
	 ruleFSequenceFlow
{ after(grammarAccess.getFSequenceFlowRule()); } 
	 EOF 
;

// Rule FSequenceFlow
ruleFSequenceFlow
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFSequenceFlowAccess().getGroup()); }
(rule__FSequenceFlow__Group__0)
{ after(grammarAccess.getFSequenceFlowAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFDiDiagramElement
entryRuleFDiDiagramElement 
:
{ before(grammarAccess.getFDiDiagramElementRule()); }
	 ruleFDiDiagramElement
{ after(grammarAccess.getFDiDiagramElementRule()); } 
	 EOF 
;

// Rule FDiDiagramElement
ruleFDiDiagramElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFDiDiagramElementAccess().getAlternatives()); }
(rule__FDiDiagramElement__Alternatives)
{ after(grammarAccess.getFDiDiagramElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFDiDiagram
entryRuleFDiDiagram 
:
{ before(grammarAccess.getFDiDiagramRule()); }
	 ruleFDiDiagram
{ after(grammarAccess.getFDiDiagramRule()); } 
	 EOF 
;

// Rule FDiDiagram
ruleFDiDiagram
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFDiDiagramAccess().getGroup()); }
(rule__FDiDiagram__Group__0)
{ after(grammarAccess.getFDiDiagramAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFDiPlane
entryRuleFDiPlane 
:
{ before(grammarAccess.getFDiPlaneRule()); }
	 ruleFDiPlane
{ after(grammarAccess.getFDiPlaneRule()); } 
	 EOF 
;

// Rule FDiPlane
ruleFDiPlane
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFDiPlaneAccess().getGroup()); }
(rule__FDiPlane__Group__0)
{ after(grammarAccess.getFDiPlaneAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFDiPlaneElement
entryRuleFDiPlaneElement 
:
{ before(grammarAccess.getFDiPlaneElementRule()); }
	 ruleFDiPlaneElement
{ after(grammarAccess.getFDiPlaneElementRule()); } 
	 EOF 
;

// Rule FDiPlaneElement
ruleFDiPlaneElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFDiPlaneElementAccess().getAlternatives()); }
(rule__FDiPlaneElement__Alternatives)
{ after(grammarAccess.getFDiPlaneElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFDiShape
entryRuleFDiShape 
:
{ before(grammarAccess.getFDiShapeRule()); }
	 ruleFDiShape
{ after(grammarAccess.getFDiShapeRule()); } 
	 EOF 
;

// Rule FDiShape
ruleFDiShape
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFDiShapeAccess().getGroup()); }
(rule__FDiShape__Group__0)
{ after(grammarAccess.getFDiShapeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFDiEdge
entryRuleFDiEdge 
:
{ before(grammarAccess.getFDiEdgeRule()); }
	 ruleFDiEdge
{ after(grammarAccess.getFDiEdgeRule()); } 
	 EOF 
;

// Rule FDiEdge
ruleFDiEdge
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFDiEdgeAccess().getGroup()); }
(rule__FDiEdge__Group__0)
{ after(grammarAccess.getFDiEdgeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFDiBounds
entryRuleFDiBounds 
:
{ before(grammarAccess.getFDiBoundsRule()); }
	 ruleFDiBounds
{ after(grammarAccess.getFDiBoundsRule()); } 
	 EOF 
;

// Rule FDiBounds
ruleFDiBounds
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFDiBoundsAccess().getGroup()); }
(rule__FDiBounds__Group__0)
{ after(grammarAccess.getFDiBoundsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFDiWaypoint
entryRuleFDiWaypoint 
:
{ before(grammarAccess.getFDiWaypointRule()); }
	 ruleFDiWaypoint
{ after(grammarAccess.getFDiWaypointRule()); } 
	 EOF 
;

// Rule FDiWaypoint
ruleFDiWaypoint
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFDiWaypointAccess().getGroup()); }
(rule__FDiWaypoint__Group__0)
{ after(grammarAccess.getFDiWaypointAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFExternal
entryRuleFExternal 
:
{ before(grammarAccess.getFExternalRule()); }
	 ruleFExternal
{ after(grammarAccess.getFExternalRule()); } 
	 EOF 
;

// Rule FExternal
ruleFExternal
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFExternalAccess().getAlternatives()); }
(rule__FExternal__Alternatives)
{ after(grammarAccess.getFExternalAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFExtActor
entryRuleFExtActor 
:
{ before(grammarAccess.getFExtActorRule()); }
	 ruleFExtActor
{ after(grammarAccess.getFExtActorRule()); } 
	 EOF 
;

// Rule FExtActor
ruleFExtActor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFExtActorAccess().getGroup()); }
(rule__FExtActor__Group__0)
{ after(grammarAccess.getFExtActorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFExtUseCase
entryRuleFExtUseCase 
:
{ before(grammarAccess.getFExtUseCaseRule()); }
	 ruleFExtUseCase
{ after(grammarAccess.getFExtUseCaseRule()); } 
	 EOF 
;

// Rule FExtUseCase
ruleFExtUseCase
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFExtUseCaseAccess().getGroup()); }
(rule__FExtUseCase__Group__0)
{ after(grammarAccess.getFExtUseCaseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFExtPage
entryRuleFExtPage 
:
{ before(grammarAccess.getFExtPageRule()); }
	 ruleFExtPage
{ after(grammarAccess.getFExtPageRule()); } 
	 EOF 
;

// Rule FExtPage
ruleFExtPage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFExtPageAccess().getGroup()); }
(rule__FExtPage__Group__0)
{ after(grammarAccess.getFExtPageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFExtDialog
entryRuleFExtDialog 
:
{ before(grammarAccess.getFExtDialogRule()); }
	 ruleFExtDialog
{ after(grammarAccess.getFExtDialogRule()); } 
	 EOF 
;

// Rule FExtDialog
ruleFExtDialog
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFExtDialogAccess().getGroup()); }
(rule__FExtDialog__Group__0)
{ after(grammarAccess.getFExtDialogAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFExtDataType
entryRuleFExtDataType 
:
{ before(grammarAccess.getFExtDataTypeRule()); }
	 ruleFExtDataType
{ after(grammarAccess.getFExtDataTypeRule()); } 
	 EOF 
;

// Rule FExtDataType
ruleFExtDataType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFExtDataTypeAccess().getGroup()); }
(rule__FExtDataType__Group__0)
{ after(grammarAccess.getFExtDataTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule FTaskType
ruleFTaskType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFTaskTypeAccess().getAlternatives()); }
(rule__FTaskType__Alternatives)
{ after(grammarAccess.getFTaskTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule FEventType
ruleFEventType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFEventTypeAccess().getAlternatives()); }
(rule__FEventType__Alternatives)
{ after(grammarAccess.getFEventTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule FEventDefinitionType
ruleFEventDefinitionType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFEventDefinitionTypeAccess().getAlternatives()); }
(rule__FEventDefinitionType__Alternatives)
{ after(grammarAccess.getFEventDefinitionTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule FGatewayType
ruleFGatewayType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFGatewayTypeAccess().getAlternatives()); }
(rule__FGatewayType__Alternatives)
{ after(grammarAccess.getFGatewayTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule FDataIOType
ruleFDataIOType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDataIOTypeAccess().getAlternatives()); }
(rule__FDataIOType__Alternatives)
{ after(grammarAccess.getFDataIOTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FProcess__Alternatives_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getFProcessAccess().getPoolsAssignment_4_0()); }
(rule__FProcess__PoolsAssignment_4_0)
{ after(grammarAccess.getFProcessAccess().getPoolsAssignment_4_0()); }
)
(
{ before(grammarAccess.getFProcessAccess().getPoolsAssignment_4_0()); }
(rule__FProcess__PoolsAssignment_4_0)*
{ after(grammarAccess.getFProcessAccess().getPoolsAssignment_4_0()); }
)
)

    |(
(
{ before(grammarAccess.getFProcessAccess().getFlowNodesAssignment_4_1()); }
(rule__FProcess__FlowNodesAssignment_4_1)
{ after(grammarAccess.getFProcessAccess().getFlowNodesAssignment_4_1()); }
)
(
{ before(grammarAccess.getFProcessAccess().getFlowNodesAssignment_4_1()); }
(rule__FProcess__FlowNodesAssignment_4_1)*
{ after(grammarAccess.getFProcessAccess().getFlowNodesAssignment_4_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FFlowNode__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFFlowNodeAccess().getFActivityParserRuleCall_0()); }
	ruleFActivity
{ after(grammarAccess.getFFlowNodeAccess().getFActivityParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getFFlowNodeAccess().getFGatewayParserRuleCall_1()); }
	ruleFGateway
{ after(grammarAccess.getFFlowNodeAccess().getFGatewayParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getFFlowNodeAccess().getFEventParserRuleCall_2()); }
	ruleFEvent
{ after(grammarAccess.getFFlowNodeAccess().getFEventParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getFFlowNodeAccess().getFLaneParserRuleCall_3()); }
	ruleFLane
{ after(grammarAccess.getFFlowNodeAccess().getFLaneParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FActivity__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFActivityAccess().getFTaskParserRuleCall_0()); }
	ruleFTask
{ after(grammarAccess.getFActivityAccess().getFTaskParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getFActivityAccess().getFCallActivityParserRuleCall_1()); }
	ruleFCallActivity
{ after(grammarAccess.getFActivityAccess().getFCallActivityParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getFActivityAccess().getFSubProcessParserRuleCall_2()); }
	ruleFSubProcess
{ after(grammarAccess.getFActivityAccess().getFSubProcessParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FGateway__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFGatewayAccess().getFGatewayDivergingParserRuleCall_0()); }
	ruleFGatewayDiverging
{ after(grammarAccess.getFGatewayAccess().getFGatewayDivergingParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getFGatewayAccess().getFGatewayConvergingParserRuleCall_1()); }
	ruleFGatewayConverging
{ after(grammarAccess.getFGatewayAccess().getFGatewayConvergingParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FOptionFlowNode__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFOptionFlowNodeAccess().getFActivityParserRuleCall_0()); }
	ruleFActivity
{ after(grammarAccess.getFOptionFlowNodeAccess().getFActivityParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getFOptionFlowNodeAccess().getFEventParserRuleCall_1()); }
	ruleFEvent
{ after(grammarAccess.getFOptionFlowNodeAccess().getFEventParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getFOptionFlowNodeAccess().getFGatewayDivergingParserRuleCall_2()); }
	ruleFGatewayDiverging
{ after(grammarAccess.getFOptionFlowNodeAccess().getFGatewayDivergingParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FAttachment__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFAttachmentAccess().getFSendMessageParserRuleCall_0()); }
	ruleFSendMessage
{ after(grammarAccess.getFAttachmentAccess().getFSendMessageParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getFAttachmentAccess().getFSendDataParserRuleCall_1()); }
	ruleFSendData
{ after(grammarAccess.getFAttachmentAccess().getFSendDataParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getFAttachmentAccess().getFDataIOParserRuleCall_2()); }
	ruleFDataIO
{ after(grammarAccess.getFAttachmentAccess().getFDataIOParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getFAttachmentAccess().getFAnnotationParserRuleCall_3()); }
	ruleFAnnotation
{ after(grammarAccess.getFAttachmentAccess().getFAnnotationParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getFAttachmentAccess().getFDocumentationParserRuleCall_4()); }
	ruleFDocumentation
{ after(grammarAccess.getFAttachmentAccess().getFDocumentationParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getFAttachmentAccess().getFFlowParserRuleCall_5()); }
	ruleFFlow
{ after(grammarAccess.getFAttachmentAccess().getFFlowParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FDiDiagramElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiDiagramElementAccess().getFDiDiagramParserRuleCall_0()); }
	ruleFDiDiagram
{ after(grammarAccess.getFDiDiagramElementAccess().getFDiDiagramParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getFDiDiagramElementAccess().getFDiPlaneParserRuleCall_1()); }
	ruleFDiPlane
{ after(grammarAccess.getFDiDiagramElementAccess().getFDiPlaneParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getFDiDiagramElementAccess().getFDiPlaneElementParserRuleCall_2()); }
	ruleFDiPlaneElement
{ after(grammarAccess.getFDiDiagramElementAccess().getFDiPlaneElementParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getFDiDiagramElementAccess().getFDiBoundsParserRuleCall_3()); }
	ruleFDiBounds
{ after(grammarAccess.getFDiDiagramElementAccess().getFDiBoundsParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getFDiDiagramElementAccess().getFDiWaypointParserRuleCall_4()); }
	ruleFDiWaypoint
{ after(grammarAccess.getFDiDiagramElementAccess().getFDiWaypointParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FDiPlaneElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiPlaneElementAccess().getFDiShapeParserRuleCall_0()); }
	ruleFDiShape
{ after(grammarAccess.getFDiPlaneElementAccess().getFDiShapeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getFDiPlaneElementAccess().getFDiEdgeParserRuleCall_1()); }
	ruleFDiEdge
{ after(grammarAccess.getFDiPlaneElementAccess().getFDiEdgeParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FExternal__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFExternalAccess().getFExtActorParserRuleCall_0()); }
	ruleFExtActor
{ after(grammarAccess.getFExternalAccess().getFExtActorParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getFExternalAccess().getFExtUseCaseParserRuleCall_1()); }
	ruleFExtUseCase
{ after(grammarAccess.getFExternalAccess().getFExtUseCaseParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getFExternalAccess().getFExtPageParserRuleCall_2()); }
	ruleFExtPage
{ after(grammarAccess.getFExternalAccess().getFExtPageParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getFExternalAccess().getFExtDialogParserRuleCall_3()); }
	ruleFExtDialog
{ after(grammarAccess.getFExternalAccess().getFExtDialogParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getFExternalAccess().getFExtDataTypeParserRuleCall_4()); }
	ruleFExtDataType
{ after(grammarAccess.getFExternalAccess().getFExtDataTypeParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FTaskType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFTaskTypeAccess().getBLANKEnumLiteralDeclaration_0()); }
(	'task' 
)
{ after(grammarAccess.getFTaskTypeAccess().getBLANKEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getFTaskTypeAccess().getBUSINESSRULEEnumLiteralDeclaration_1()); }
(	'business rule task' 
)
{ after(grammarAccess.getFTaskTypeAccess().getBUSINESSRULEEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getFTaskTypeAccess().getMANUALEnumLiteralDeclaration_2()); }
(	'manual task' 
)
{ after(grammarAccess.getFTaskTypeAccess().getMANUALEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getFTaskTypeAccess().getRECEIVEEnumLiteralDeclaration_3()); }
(	'receive task' 
)
{ after(grammarAccess.getFTaskTypeAccess().getRECEIVEEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getFTaskTypeAccess().getSCRIPTEnumLiteralDeclaration_4()); }
(	'script task' 
)
{ after(grammarAccess.getFTaskTypeAccess().getSCRIPTEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getFTaskTypeAccess().getSENDEnumLiteralDeclaration_5()); }
(	'send task' 
)
{ after(grammarAccess.getFTaskTypeAccess().getSENDEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getFTaskTypeAccess().getSERVICEEnumLiteralDeclaration_6()); }
(	'service task' 
)
{ after(grammarAccess.getFTaskTypeAccess().getSERVICEEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getFTaskTypeAccess().getUSEREnumLiteralDeclaration_7()); }
(	'user task' 
)
{ after(grammarAccess.getFTaskTypeAccess().getUSEREnumLiteralDeclaration_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FEventType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFEventTypeAccess().getEVENTEnumLiteralDeclaration_0()); }
(	'event' 
)
{ after(grammarAccess.getFEventTypeAccess().getEVENTEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getFEventTypeAccess().getSTARTEnumLiteralDeclaration_1()); }
(	'start event' 
)
{ after(grammarAccess.getFEventTypeAccess().getSTARTEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getFEventTypeAccess().getTHROWEnumLiteralDeclaration_2()); }
(	'throwing event' 
)
{ after(grammarAccess.getFEventTypeAccess().getTHROWEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getFEventTypeAccess().getCATCHEnumLiteralDeclaration_3()); }
(	'catching event' 
)
{ after(grammarAccess.getFEventTypeAccess().getCATCHEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getFEventTypeAccess().getINTERMEDIATE_CATCHEnumLiteralDeclaration_4()); }
(	'intermediate catching event' 
)
{ after(grammarAccess.getFEventTypeAccess().getINTERMEDIATE_CATCHEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getFEventTypeAccess().getINTERMEDIATE_THROWEnumLiteralDeclaration_5()); }
(	'intermediate throwing event' 
)
{ after(grammarAccess.getFEventTypeAccess().getINTERMEDIATE_THROWEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getFEventTypeAccess().getENDEnumLiteralDeclaration_6()); }
(	'end event' 
)
{ after(grammarAccess.getFEventTypeAccess().getENDEnumLiteralDeclaration_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FEventDefinitionType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFEventDefinitionTypeAccess().getBLANKEnumLiteralDeclaration_0()); }
(	'blank' 
)
{ after(grammarAccess.getFEventDefinitionTypeAccess().getBLANKEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getFEventDefinitionTypeAccess().getMESSAGEEnumLiteralDeclaration_1()); }
(	'message' 
)
{ after(grammarAccess.getFEventDefinitionTypeAccess().getMESSAGEEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getFEventDefinitionTypeAccess().getTIMEREnumLiteralDeclaration_2()); }
(	'timer' 
)
{ after(grammarAccess.getFEventDefinitionTypeAccess().getTIMEREnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getFEventDefinitionTypeAccess().getERROREnumLiteralDeclaration_3()); }
(	'error' 
)
{ after(grammarAccess.getFEventDefinitionTypeAccess().getERROREnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getFEventDefinitionTypeAccess().getESCALATIONEnumLiteralDeclaration_4()); }
(	'escalation' 
)
{ after(grammarAccess.getFEventDefinitionTypeAccess().getESCALATIONEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getFEventDefinitionTypeAccess().getCANCELEnumLiteralDeclaration_5()); }
(	'cancel' 
)
{ after(grammarAccess.getFEventDefinitionTypeAccess().getCANCELEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getFEventDefinitionTypeAccess().getCOMPENSATIONEnumLiteralDeclaration_6()); }
(	'compensation' 
)
{ after(grammarAccess.getFEventDefinitionTypeAccess().getCOMPENSATIONEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getFEventDefinitionTypeAccess().getCONDITIONALEnumLiteralDeclaration_7()); }
(	'conditional' 
)
{ after(grammarAccess.getFEventDefinitionTypeAccess().getCONDITIONALEnumLiteralDeclaration_7()); }
)

    |(
{ before(grammarAccess.getFEventDefinitionTypeAccess().getLINKEnumLiteralDeclaration_8()); }
(	'link' 
)
{ after(grammarAccess.getFEventDefinitionTypeAccess().getLINKEnumLiteralDeclaration_8()); }
)

    |(
{ before(grammarAccess.getFEventDefinitionTypeAccess().getSIGNALEnumLiteralDeclaration_9()); }
(	'signal' 
)
{ after(grammarAccess.getFEventDefinitionTypeAccess().getSIGNALEnumLiteralDeclaration_9()); }
)

    |(
{ before(grammarAccess.getFEventDefinitionTypeAccess().getTERMINATEEnumLiteralDeclaration_10()); }
(	'terminate' 
)
{ after(grammarAccess.getFEventDefinitionTypeAccess().getTERMINATEEnumLiteralDeclaration_10()); }
)

    |(
{ before(grammarAccess.getFEventDefinitionTypeAccess().getMULTIPLEEnumLiteralDeclaration_11()); }
(	'multiple' 
)
{ after(grammarAccess.getFEventDefinitionTypeAccess().getMULTIPLEEnumLiteralDeclaration_11()); }
)

    |(
{ before(grammarAccess.getFEventDefinitionTypeAccess().getPARALLEL_MULTIPLEEnumLiteralDeclaration_12()); }
(	'parallel multiple' 
)
{ after(grammarAccess.getFEventDefinitionTypeAccess().getPARALLEL_MULTIPLEEnumLiteralDeclaration_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FGatewayType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFGatewayTypeAccess().getBLANKEnumLiteralDeclaration_0()); }
(	'gateway' 
)
{ after(grammarAccess.getFGatewayTypeAccess().getBLANKEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getFGatewayTypeAccess().getPARALLELEnumLiteralDeclaration_1()); }
(	'parallel gateway' 
)
{ after(grammarAccess.getFGatewayTypeAccess().getPARALLELEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getFGatewayTypeAccess().getPARALLELEnumLiteralDeclaration_2()); }
(	'and gateway' 
)
{ after(grammarAccess.getFGatewayTypeAccess().getPARALLELEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getFGatewayTypeAccess().getINCLUSIVEEnumLiteralDeclaration_3()); }
(	'inclusive gateway' 
)
{ after(grammarAccess.getFGatewayTypeAccess().getINCLUSIVEEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getFGatewayTypeAccess().getINCLUSIVEEnumLiteralDeclaration_4()); }
(	'or gateway' 
)
{ after(grammarAccess.getFGatewayTypeAccess().getINCLUSIVEEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getFGatewayTypeAccess().getEXCLUSIVEEnumLiteralDeclaration_5()); }
(	'exclusive gateway' 
)
{ after(grammarAccess.getFGatewayTypeAccess().getEXCLUSIVEEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getFGatewayTypeAccess().getEXCLUSIVEEnumLiteralDeclaration_6()); }
(	'xor gateway' 
)
{ after(grammarAccess.getFGatewayTypeAccess().getEXCLUSIVEEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getFGatewayTypeAccess().getEVENTBASEDEnumLiteralDeclaration_7()); }
(	'eventbased gateway' 
)
{ after(grammarAccess.getFGatewayTypeAccess().getEVENTBASEDEnumLiteralDeclaration_7()); }
)

    |(
{ before(grammarAccess.getFGatewayTypeAccess().getCOMPLEXEnumLiteralDeclaration_8()); }
(	'complex gateway' 
)
{ after(grammarAccess.getFGatewayTypeAccess().getCOMPLEXEnumLiteralDeclaration_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FDataIOType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDataIOTypeAccess().getBLANKEnumLiteralDeclaration_0()); }
(	'data input/output' 
)
{ after(grammarAccess.getFDataIOTypeAccess().getBLANKEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getFDataIOTypeAccess().getINPUTEnumLiteralDeclaration_1()); }
(	'data input' 
)
{ after(grammarAccess.getFDataIOTypeAccess().getINPUTEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getFDataIOTypeAccess().getOUTPUTEnumLiteralDeclaration_2()); }
(	'data output' 
)
{ after(grammarAccess.getFDataIOTypeAccess().getOUTPUTEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FDocumentRoot__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDocumentRoot__Group__0__Impl
	rule__FDocumentRoot__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FDocumentRoot__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDocumentRootAccess().getExternalRefsAssignment_0()); }
(rule__FDocumentRoot__ExternalRefsAssignment_0)*
{ after(grammarAccess.getFDocumentRootAccess().getExternalRefsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FDocumentRoot__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDocumentRoot__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FDocumentRoot__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getFDocumentRootAccess().getPackagesAssignment_1()); }
(rule__FDocumentRoot__PackagesAssignment_1)
{ after(grammarAccess.getFDocumentRootAccess().getPackagesAssignment_1()); }
)
(
{ before(grammarAccess.getFDocumentRootAccess().getPackagesAssignment_1()); }
(rule__FDocumentRoot__PackagesAssignment_1)*
{ after(grammarAccess.getFDocumentRootAccess().getPackagesAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FProcessPackageDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FProcessPackageDecl__Group__0__Impl
	rule__FProcessPackageDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FProcessPackageDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFProcessPackageDeclAccess().getPackageKeyword_0()); }

	'package' 

{ after(grammarAccess.getFProcessPackageDeclAccess().getPackageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FProcessPackageDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FProcessPackageDecl__Group__1__Impl
	rule__FProcessPackageDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FProcessPackageDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFProcessPackageDeclAccess().getNameAssignment_1()); }
(rule__FProcessPackageDecl__NameAssignment_1)
{ after(grammarAccess.getFProcessPackageDeclAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FProcessPackageDecl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FProcessPackageDecl__Group__2__Impl
	rule__FProcessPackageDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FProcessPackageDecl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFProcessPackageDeclAccess().getLabelAssignment_2()); }
(rule__FProcessPackageDecl__LabelAssignment_2)?
{ after(grammarAccess.getFProcessPackageDeclAccess().getLabelAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FProcessPackageDecl__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FProcessPackageDecl__Group__3__Impl
	rule__FProcessPackageDecl__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FProcessPackageDecl__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getFProcessPackageDeclAccess().getProcessesAssignment_3()); }
(rule__FProcessPackageDecl__ProcessesAssignment_3)
{ after(grammarAccess.getFProcessPackageDeclAccess().getProcessesAssignment_3()); }
)
(
{ before(grammarAccess.getFProcessPackageDeclAccess().getProcessesAssignment_3()); }
(rule__FProcessPackageDecl__ProcessesAssignment_3)*
{ after(grammarAccess.getFProcessPackageDeclAccess().getProcessesAssignment_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FProcessPackageDecl__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FProcessPackageDecl__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FProcessPackageDecl__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFProcessPackageDeclAccess().getEndPackageKeyword_4()); }
(
	'end package' 
)?
{ after(grammarAccess.getFProcessPackageDeclAccess().getEndPackageKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__FProcess__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FProcess__Group__0__Impl
	rule__FProcess__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FProcess__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFProcessAccess().getProcessKeyword_0()); }

	'process' 

{ after(grammarAccess.getFProcessAccess().getProcessKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FProcess__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FProcess__Group__1__Impl
	rule__FProcess__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FProcess__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFProcessAccess().getNameAssignment_1()); }
(rule__FProcess__NameAssignment_1)?
{ after(grammarAccess.getFProcessAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FProcess__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FProcess__Group__2__Impl
	rule__FProcess__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FProcess__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFProcessAccess().getLabelAssignment_2()); }
(rule__FProcess__LabelAssignment_2)?
{ after(grammarAccess.getFProcessAccess().getLabelAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FProcess__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FProcess__Group__3__Impl
	rule__FProcess__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FProcess__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFProcessAccess().getGroup_3()); }
(rule__FProcess__Group_3__0)?
{ after(grammarAccess.getFProcessAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FProcess__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FProcess__Group__4__Impl
	rule__FProcess__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FProcess__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFProcessAccess().getAlternatives_4()); }
(rule__FProcess__Alternatives_4)
{ after(grammarAccess.getFProcessAccess().getAlternatives_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FProcess__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FProcess__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FProcess__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFProcessAccess().getEndProcessKeyword_5()); }
(
	'end process' 
)?
{ after(grammarAccess.getFProcessAccess().getEndProcessKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__FProcess__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FProcess__Group_3__0__Impl
	rule__FProcess__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FProcess__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFProcessAccess().getForUsecaseKeyword_3_0()); }

	'for usecase' 

{ after(grammarAccess.getFProcessAccess().getForUsecaseKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FProcess__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FProcess__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FProcess__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFProcessAccess().getUsecaseAssignment_3_1()); }
(rule__FProcess__UsecaseAssignment_3_1)
{ after(grammarAccess.getFProcessAccess().getUsecaseAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FPool__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FPool__Group__0__Impl
	rule__FPool__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FPool__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFPoolAccess().getFPoolAction_0()); }
(

)
{ after(grammarAccess.getFPoolAccess().getFPoolAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FPool__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FPool__Group__1__Impl
	rule__FPool__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FPool__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFPoolAccess().getPoolKeyword_1()); }

	'pool' 

{ after(grammarAccess.getFPoolAccess().getPoolKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FPool__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FPool__Group__2__Impl
	rule__FPool__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FPool__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFPoolAccess().getNameAssignment_2()); }
(rule__FPool__NameAssignment_2)?
{ after(grammarAccess.getFPoolAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FPool__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FPool__Group__3__Impl
	rule__FPool__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FPool__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFPoolAccess().getLabelAssignment_3()); }
(rule__FPool__LabelAssignment_3)?
{ after(grammarAccess.getFPoolAccess().getLabelAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FPool__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FPool__Group__4__Impl
	rule__FPool__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FPool__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFPoolAccess().getGroup_4()); }
(rule__FPool__Group_4__0)?
{ after(grammarAccess.getFPoolAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FPool__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FPool__Group__5__Impl
	rule__FPool__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FPool__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFPoolAccess().getInitializingAssignment_5()); }
(rule__FPool__InitializingAssignment_5)?
{ after(grammarAccess.getFPoolAccess().getInitializingAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FPool__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FPool__Group__6__Impl
	rule__FPool__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__FPool__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFPoolAccess().getFlowNodesAssignment_6()); }
(rule__FPool__FlowNodesAssignment_6)*
{ after(grammarAccess.getFPoolAccess().getFlowNodesAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FPool__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FPool__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FPool__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFPoolAccess().getEndPoolKeyword_7()); }
(
	'end pool' 
)?
{ after(grammarAccess.getFPoolAccess().getEndPoolKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__FPool__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FPool__Group_4__0__Impl
	rule__FPool__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FPool__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFPoolAccess().getForActorKeyword_4_0()); }

	'for actor' 

{ after(grammarAccess.getFPoolAccess().getForActorKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FPool__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FPool__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FPool__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFPoolAccess().getActorAssignment_4_1()); }
(rule__FPool__ActorAssignment_4_1)
{ after(grammarAccess.getFPoolAccess().getActorAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FLane__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FLane__Group__0__Impl
	rule__FLane__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FLane__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFLaneAccess().getLaneKeyword_0()); }

	'lane' 

{ after(grammarAccess.getFLaneAccess().getLaneKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FLane__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FLane__Group__1__Impl
	rule__FLane__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FLane__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFLaneAccess().getNameAssignment_1()); }
(rule__FLane__NameAssignment_1)?
{ after(grammarAccess.getFLaneAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FLane__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FLane__Group__2__Impl
	rule__FLane__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FLane__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFLaneAccess().getLabelAssignment_2()); }
(rule__FLane__LabelAssignment_2)?
{ after(grammarAccess.getFLaneAccess().getLabelAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FLane__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FLane__Group__3__Impl
	rule__FLane__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FLane__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFLaneAccess().getGroup_3()); }
(rule__FLane__Group_3__0)?
{ after(grammarAccess.getFLaneAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FLane__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FLane__Group__4__Impl
	rule__FLane__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FLane__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFLaneAccess().getInitializingAssignment_4()); }
(rule__FLane__InitializingAssignment_4)?
{ after(grammarAccess.getFLaneAccess().getInitializingAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FLane__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FLane__Group__5__Impl
	rule__FLane__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FLane__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getFLaneAccess().getFlowNodesAssignment_5()); }
(rule__FLane__FlowNodesAssignment_5)
{ after(grammarAccess.getFLaneAccess().getFlowNodesAssignment_5()); }
)
(
{ before(grammarAccess.getFLaneAccess().getFlowNodesAssignment_5()); }
(rule__FLane__FlowNodesAssignment_5)*
{ after(grammarAccess.getFLaneAccess().getFlowNodesAssignment_5()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FLane__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FLane__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FLane__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFLaneAccess().getEndLaneKeyword_6()); }

	'end lane' 

{ after(grammarAccess.getFLaneAccess().getEndLaneKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__FLane__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FLane__Group_3__0__Impl
	rule__FLane__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FLane__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFLaneAccess().getForActorKeyword_3_0()); }

	'for actor' 

{ after(grammarAccess.getFLaneAccess().getForActorKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FLane__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FLane__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FLane__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFLaneAccess().getActorAssignment_3_1()); }
(rule__FLane__ActorAssignment_3_1)
{ after(grammarAccess.getFLaneAccess().getActorAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FEvent__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FEvent__Group__0__Impl
	rule__FEvent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FEvent__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFEventAccess().getEventTypeAssignment_0()); }
(rule__FEvent__EventTypeAssignment_0)
{ after(grammarAccess.getFEventAccess().getEventTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FEvent__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FEvent__Group__1__Impl
	rule__FEvent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FEvent__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFEventAccess().getGroup_1()); }
(rule__FEvent__Group_1__0)?
{ after(grammarAccess.getFEventAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FEvent__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FEvent__Group__2__Impl
	rule__FEvent__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FEvent__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFEventAccess().getNonInterruptingAssignment_2()); }
(rule__FEvent__NonInterruptingAssignment_2)?
{ after(grammarAccess.getFEventAccess().getNonInterruptingAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FEvent__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FEvent__Group__3__Impl
	rule__FEvent__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FEvent__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFEventAccess().getNameAssignment_3()); }
(rule__FEvent__NameAssignment_3)?
{ after(grammarAccess.getFEventAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FEvent__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FEvent__Group__4__Impl
	rule__FEvent__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FEvent__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFEventAccess().getLabelAssignment_4()); }
(rule__FEvent__LabelAssignment_4)?
{ after(grammarAccess.getFEventAccess().getLabelAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FEvent__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FEvent__Group__5__Impl
	rule__FEvent__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FEvent__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFEventAccess().getGroup_5()); }
(rule__FEvent__Group_5__0)?
{ after(grammarAccess.getFEventAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FEvent__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FEvent__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FEvent__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFEventAccess().getAttachmentsAssignment_6()); }
(rule__FEvent__AttachmentsAssignment_6)*
{ after(grammarAccess.getFEventAccess().getAttachmentsAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__FEvent__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FEvent__Group_1__0__Impl
	rule__FEvent__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FEvent__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFEventAccess().getOfTypeKeyword_1_0()); }

	'of type' 

{ after(grammarAccess.getFEventAccess().getOfTypeKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FEvent__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FEvent__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FEvent__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFEventAccess().getEventDefinitionTypeAssignment_1_1()); }
(rule__FEvent__EventDefinitionTypeAssignment_1_1)
{ after(grammarAccess.getFEventAccess().getEventDefinitionTypeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FEvent__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FEvent__Group_5__0__Impl
	rule__FEvent__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FEvent__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFEventAccess().getForPageKeyword_5_0()); }

	'for page' 

{ after(grammarAccess.getFEventAccess().getForPageKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FEvent__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FEvent__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FEvent__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFEventAccess().getDialogAssignment_5_1()); }
(rule__FEvent__DialogAssignment_5_1)
{ after(grammarAccess.getFEventAccess().getDialogAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FTask__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FTask__Group__0__Impl
	rule__FTask__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FTask__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFTaskAccess().getTaskTypeAssignment_0()); }
(rule__FTask__TaskTypeAssignment_0)
{ after(grammarAccess.getFTaskAccess().getTaskTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FTask__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FTask__Group__1__Impl
	rule__FTask__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FTask__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFTaskAccess().getNameAssignment_1()); }
(rule__FTask__NameAssignment_1)?
{ after(grammarAccess.getFTaskAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FTask__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FTask__Group__2__Impl
	rule__FTask__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FTask__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFTaskAccess().getLabelAssignment_2()); }
(rule__FTask__LabelAssignment_2)?
{ after(grammarAccess.getFTaskAccess().getLabelAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FTask__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FTask__Group__3__Impl
	rule__FTask__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FTask__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFTaskAccess().getGroup_3()); }
(rule__FTask__Group_3__0)?
{ after(grammarAccess.getFTaskAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FTask__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FTask__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FTask__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFTaskAccess().getAttachmentsAssignment_4()); }
(rule__FTask__AttachmentsAssignment_4)*
{ after(grammarAccess.getFTaskAccess().getAttachmentsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__FTask__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FTask__Group_3__0__Impl
	rule__FTask__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FTask__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFTaskAccess().getForDialogKeyword_3_0()); }

	'for dialog' 

{ after(grammarAccess.getFTaskAccess().getForDialogKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FTask__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FTask__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FTask__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFTaskAccess().getDialogAssignment_3_1()); }
(rule__FTask__DialogAssignment_3_1)
{ after(grammarAccess.getFTaskAccess().getDialogAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FCallActivity__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FCallActivity__Group__0__Impl
	rule__FCallActivity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FCallActivity__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFCallActivityAccess().getCallactivityKeyword_0()); }

	'callactivity' 

{ after(grammarAccess.getFCallActivityAccess().getCallactivityKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FCallActivity__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FCallActivity__Group__1__Impl
	rule__FCallActivity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FCallActivity__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFCallActivityAccess().getNameAssignment_1()); }
(rule__FCallActivity__NameAssignment_1)?
{ after(grammarAccess.getFCallActivityAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FCallActivity__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FCallActivity__Group__2__Impl
	rule__FCallActivity__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FCallActivity__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFCallActivityAccess().getLabelAssignment_2()); }
(rule__FCallActivity__LabelAssignment_2)?
{ after(grammarAccess.getFCallActivityAccess().getLabelAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FCallActivity__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FCallActivity__Group__3__Impl
	rule__FCallActivity__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FCallActivity__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFCallActivityAccess().getGroup_3()); }
(rule__FCallActivity__Group_3__0)
{ after(grammarAccess.getFCallActivityAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FCallActivity__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FCallActivity__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FCallActivity__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFCallActivityAccess().getAttachmentsAssignment_4()); }
(rule__FCallActivity__AttachmentsAssignment_4)*
{ after(grammarAccess.getFCallActivityAccess().getAttachmentsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__FCallActivity__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FCallActivity__Group_3__0__Impl
	rule__FCallActivity__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FCallActivity__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFCallActivityAccess().getCallingKeyword_3_0()); }

	'calling' 

{ after(grammarAccess.getFCallActivityAccess().getCallingKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FCallActivity__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FCallActivity__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FCallActivity__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFCallActivityAccess().getCalledElementAssignment_3_1()); }
(rule__FCallActivity__CalledElementAssignment_3_1)
{ after(grammarAccess.getFCallActivityAccess().getCalledElementAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FSubProcess__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FSubProcess__Group__0__Impl
	rule__FSubProcess__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FSubProcess__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFSubProcessAccess().getSubprocessKeyword_0()); }

	'subprocess' 

{ after(grammarAccess.getFSubProcessAccess().getSubprocessKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FSubProcess__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FSubProcess__Group__1__Impl
	rule__FSubProcess__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FSubProcess__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFSubProcessAccess().getNameAssignment_1()); }
(rule__FSubProcess__NameAssignment_1)?
{ after(grammarAccess.getFSubProcessAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FSubProcess__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FSubProcess__Group__2__Impl
	rule__FSubProcess__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FSubProcess__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFSubProcessAccess().getLabelAssignment_2()); }
(rule__FSubProcess__LabelAssignment_2)?
{ after(grammarAccess.getFSubProcessAccess().getLabelAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FSubProcess__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FSubProcess__Group__3__Impl
	rule__FSubProcess__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FSubProcess__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFSubProcessAccess().getAttachmentsAssignment_3()); }
(rule__FSubProcess__AttachmentsAssignment_3)*
{ after(grammarAccess.getFSubProcessAccess().getAttachmentsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FSubProcess__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FSubProcess__Group__4__Impl
	rule__FSubProcess__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FSubProcess__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getFSubProcessAccess().getFlowNodesAssignment_4()); }
(rule__FSubProcess__FlowNodesAssignment_4)
{ after(grammarAccess.getFSubProcessAccess().getFlowNodesAssignment_4()); }
)
(
{ before(grammarAccess.getFSubProcessAccess().getFlowNodesAssignment_4()); }
(rule__FSubProcess__FlowNodesAssignment_4)*
{ after(grammarAccess.getFSubProcessAccess().getFlowNodesAssignment_4()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FSubProcess__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FSubProcess__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FSubProcess__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFSubProcessAccess().getEndSubprocessKeyword_5()); }

	'end subprocess' 

{ after(grammarAccess.getFSubProcessAccess().getEndSubprocessKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__FGatewayDiverging__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FGatewayDiverging__Group__0__Impl
	rule__FGatewayDiverging__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FGatewayDiverging__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFGatewayDivergingAccess().getGatewayTypeAssignment_0()); }
(rule__FGatewayDiverging__GatewayTypeAssignment_0)
{ after(grammarAccess.getFGatewayDivergingAccess().getGatewayTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FGatewayDiverging__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FGatewayDiverging__Group__1__Impl
	rule__FGatewayDiverging__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FGatewayDiverging__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFGatewayDivergingAccess().getNameAssignment_1()); }
(rule__FGatewayDiverging__NameAssignment_1)?
{ after(grammarAccess.getFGatewayDivergingAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FGatewayDiverging__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FGatewayDiverging__Group__2__Impl
	rule__FGatewayDiverging__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FGatewayDiverging__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFGatewayDivergingAccess().getLabelAssignment_2()); }
(rule__FGatewayDiverging__LabelAssignment_2)?
{ after(grammarAccess.getFGatewayDivergingAccess().getLabelAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FGatewayDiverging__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FGatewayDiverging__Group__3__Impl
	rule__FGatewayDiverging__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FGatewayDiverging__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFGatewayDivergingAccess().getAttachmentsAssignment_3()); }
(rule__FGatewayDiverging__AttachmentsAssignment_3)*
{ after(grammarAccess.getFGatewayDivergingAccess().getAttachmentsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FGatewayDiverging__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FGatewayDiverging__Group__4__Impl
	rule__FGatewayDiverging__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FGatewayDiverging__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getFGatewayDivergingAccess().getOptionsAssignment_4()); }
(rule__FGatewayDiverging__OptionsAssignment_4)
{ after(grammarAccess.getFGatewayDivergingAccess().getOptionsAssignment_4()); }
)
(
{ before(grammarAccess.getFGatewayDivergingAccess().getOptionsAssignment_4()); }
(rule__FGatewayDiverging__OptionsAssignment_4)*
{ after(grammarAccess.getFGatewayDivergingAccess().getOptionsAssignment_4()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FGatewayDiverging__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FGatewayDiverging__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FGatewayDiverging__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFGatewayDivergingAccess().getGatewayConvergingAssignment_5()); }
(rule__FGatewayDiverging__GatewayConvergingAssignment_5)
{ after(grammarAccess.getFGatewayDivergingAccess().getGatewayConvergingAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__FGatewayConverging__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FGatewayConverging__Group__0__Impl
	rule__FGatewayConverging__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FGatewayConverging__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFGatewayConvergingAccess().getGroup_0()); }
(rule__FGatewayConverging__Group_0__0)
{ after(grammarAccess.getFGatewayConvergingAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FGatewayConverging__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FGatewayConverging__Group__1__Impl
	rule__FGatewayConverging__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FGatewayConverging__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFGatewayConvergingAccess().getNameAssignment_1()); }
(rule__FGatewayConverging__NameAssignment_1)?
{ after(grammarAccess.getFGatewayConvergingAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FGatewayConverging__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FGatewayConverging__Group__2__Impl
	rule__FGatewayConverging__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FGatewayConverging__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFGatewayConvergingAccess().getLabelAssignment_2()); }
(rule__FGatewayConverging__LabelAssignment_2)?
{ after(grammarAccess.getFGatewayConvergingAccess().getLabelAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FGatewayConverging__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FGatewayConverging__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FGatewayConverging__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFGatewayConvergingAccess().getAttachmentsAssignment_3()); }
(rule__FGatewayConverging__AttachmentsAssignment_3)*
{ after(grammarAccess.getFGatewayConvergingAccess().getAttachmentsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FGatewayConverging__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FGatewayConverging__Group_0__0__Impl
	rule__FGatewayConverging__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FGatewayConverging__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFGatewayConvergingAccess().getMergeKeyword_0_0()); }

	'merge' 

{ after(grammarAccess.getFGatewayConvergingAccess().getMergeKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FGatewayConverging__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FGatewayConverging__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FGatewayConverging__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFGatewayConvergingAccess().getGatewayTypeAssignment_0_1()); }
(rule__FGatewayConverging__GatewayTypeAssignment_0_1)
{ after(grammarAccess.getFGatewayConvergingAccess().getGatewayTypeAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FOption__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FOption__Group__0__Impl
	rule__FOption__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FOption__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFOptionAccess().getFOptionAction_0()); }
(

)
{ after(grammarAccess.getFOptionAccess().getFOptionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FOption__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FOption__Group__1__Impl
	rule__FOption__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FOption__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFOptionAccess().getOptionKeyword_1()); }

	'option' 

{ after(grammarAccess.getFOptionAccess().getOptionKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FOption__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FOption__Group__2__Impl
	rule__FOption__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FOption__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFOptionAccess().getDefaultAssignment_2()); }
(rule__FOption__DefaultAssignment_2)?
{ after(grammarAccess.getFOptionAccess().getDefaultAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FOption__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FOption__Group__3__Impl
	rule__FOption__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FOption__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFOptionAccess().getNameAssignment_3()); }
(rule__FOption__NameAssignment_3)?
{ after(grammarAccess.getFOptionAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FOption__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FOption__Group__4__Impl
	rule__FOption__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FOption__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFOptionAccess().getLabelAssignment_4()); }
(rule__FOption__LabelAssignment_4)?
{ after(grammarAccess.getFOptionAccess().getLabelAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FOption__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FOption__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FOption__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFOptionAccess().getFlowNodesAssignment_5()); }
(rule__FOption__FlowNodesAssignment_5)*
{ after(grammarAccess.getFOptionAccess().getFlowNodesAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__FSendMessage__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FSendMessage__Group__0__Impl
	rule__FSendMessage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FSendMessage__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFSendMessageAccess().getSendMessageKeyword_0()); }

	'send message' 

{ after(grammarAccess.getFSendMessageAccess().getSendMessageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FSendMessage__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FSendMessage__Group__1__Impl
	rule__FSendMessage__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FSendMessage__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFSendMessageAccess().getNameAssignment_1()); }
(rule__FSendMessage__NameAssignment_1)?
{ after(grammarAccess.getFSendMessageAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FSendMessage__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FSendMessage__Group__2__Impl
	rule__FSendMessage__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FSendMessage__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFSendMessageAccess().getLabelAssignment_2()); }
(rule__FSendMessage__LabelAssignment_2)?
{ after(grammarAccess.getFSendMessageAccess().getLabelAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FSendMessage__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FSendMessage__Group__3__Impl
	rule__FSendMessage__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FSendMessage__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFSendMessageAccess().getGroup_3()); }
(rule__FSendMessage__Group_3__0)
{ after(grammarAccess.getFSendMessageAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FSendMessage__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FSendMessage__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FSendMessage__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFSendMessageAccess().getGroup_4()); }
(rule__FSendMessage__Group_4__0)?
{ after(grammarAccess.getFSendMessageAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__FSendMessage__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FSendMessage__Group_3__0__Impl
	rule__FSendMessage__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FSendMessage__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFSendMessageAccess().getToKeyword_3_0()); }

	'to' 

{ after(grammarAccess.getFSendMessageAccess().getToKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FSendMessage__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FSendMessage__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FSendMessage__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFSendMessageAccess().getReceivingElementAssignment_3_1()); }
(rule__FSendMessage__ReceivingElementAssignment_3_1)
{ after(grammarAccess.getFSendMessageAccess().getReceivingElementAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FSendMessage__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FSendMessage__Group_4__0__Impl
	rule__FSendMessage__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FSendMessage__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFSendMessageAccess().getOfDatatypeKeyword_4_0()); }

	'of datatype' 

{ after(grammarAccess.getFSendMessageAccess().getOfDatatypeKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FSendMessage__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FSendMessage__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FSendMessage__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFSendMessageAccess().getDataTypeAssignment_4_1()); }
(rule__FSendMessage__DataTypeAssignment_4_1)
{ after(grammarAccess.getFSendMessageAccess().getDataTypeAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FSendData__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FSendData__Group__0__Impl
	rule__FSendData__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FSendData__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFSendDataAccess().getSendDataKeyword_0()); }

	'send data' 

{ after(grammarAccess.getFSendDataAccess().getSendDataKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FSendData__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FSendData__Group__1__Impl
	rule__FSendData__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FSendData__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFSendDataAccess().getNameAssignment_1()); }
(rule__FSendData__NameAssignment_1)?
{ after(grammarAccess.getFSendDataAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FSendData__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FSendData__Group__2__Impl
	rule__FSendData__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FSendData__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFSendDataAccess().getLabelAssignment_2()); }
(rule__FSendData__LabelAssignment_2)?
{ after(grammarAccess.getFSendDataAccess().getLabelAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FSendData__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FSendData__Group__3__Impl
	rule__FSendData__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FSendData__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFSendDataAccess().getGroup_3()); }
(rule__FSendData__Group_3__0)
{ after(grammarAccess.getFSendDataAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FSendData__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FSendData__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FSendData__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFSendDataAccess().getGroup_4()); }
(rule__FSendData__Group_4__0)?
{ after(grammarAccess.getFSendDataAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__FSendData__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FSendData__Group_3__0__Impl
	rule__FSendData__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FSendData__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFSendDataAccess().getToKeyword_3_0()); }

	'to' 

{ after(grammarAccess.getFSendDataAccess().getToKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FSendData__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FSendData__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FSendData__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFSendDataAccess().getReceivingElementAssignment_3_1()); }
(rule__FSendData__ReceivingElementAssignment_3_1)
{ after(grammarAccess.getFSendDataAccess().getReceivingElementAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FSendData__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FSendData__Group_4__0__Impl
	rule__FSendData__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FSendData__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFSendDataAccess().getOfDatatypeKeyword_4_0()); }

	'of datatype' 

{ after(grammarAccess.getFSendDataAccess().getOfDatatypeKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FSendData__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FSendData__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FSendData__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFSendDataAccess().getDataTypeAssignment_4_1()); }
(rule__FSendData__DataTypeAssignment_4_1)
{ after(grammarAccess.getFSendDataAccess().getDataTypeAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FDataIO__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDataIO__Group__0__Impl
	rule__FDataIO__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FDataIO__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDataIOAccess().getDataIoTypeAssignment_0()); }
(rule__FDataIO__DataIoTypeAssignment_0)
{ after(grammarAccess.getFDataIOAccess().getDataIoTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FDataIO__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDataIO__Group__1__Impl
	rule__FDataIO__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FDataIO__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDataIOAccess().getNameAssignment_1()); }
(rule__FDataIO__NameAssignment_1)?
{ after(grammarAccess.getFDataIOAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FDataIO__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDataIO__Group__2__Impl
	rule__FDataIO__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FDataIO__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDataIOAccess().getLabelAssignment_2()); }
(rule__FDataIO__LabelAssignment_2)?
{ after(grammarAccess.getFDataIOAccess().getLabelAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FDataIO__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDataIO__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FDataIO__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDataIOAccess().getGroup_3()); }
(rule__FDataIO__Group_3__0)?
{ after(grammarAccess.getFDataIOAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FDataIO__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDataIO__Group_3__0__Impl
	rule__FDataIO__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FDataIO__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDataIOAccess().getOfDatatypeKeyword_3_0()); }

	'of datatype' 

{ after(grammarAccess.getFDataIOAccess().getOfDatatypeKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FDataIO__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDataIO__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FDataIO__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDataIOAccess().getDataTypeAssignment_3_1()); }
(rule__FDataIO__DataTypeAssignment_3_1)
{ after(grammarAccess.getFDataIOAccess().getDataTypeAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FAnnotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FAnnotation__Group__0__Impl
	rule__FAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FAnnotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFAnnotationAccess().getAnnotationKeyword_0()); }

	'annotation' 

{ after(grammarAccess.getFAnnotationAccess().getAnnotationKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FAnnotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FAnnotation__Group__1__Impl
	rule__FAnnotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FAnnotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFAnnotationAccess().getNameAssignment_1()); }
(rule__FAnnotation__NameAssignment_1)?
{ after(grammarAccess.getFAnnotationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FAnnotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FAnnotation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FAnnotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFAnnotationAccess().getTextAssignment_2()); }
(rule__FAnnotation__TextAssignment_2)
{ after(grammarAccess.getFAnnotationAccess().getTextAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FDocumentation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDocumentation__Group__0__Impl
	rule__FDocumentation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FDocumentation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDocumentationAccess().getDocumentationKeyword_0()); }

	'documentation' 

{ after(grammarAccess.getFDocumentationAccess().getDocumentationKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FDocumentation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDocumentation__Group__1__Impl
	rule__FDocumentation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FDocumentation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDocumentationAccess().getNameAssignment_1()); }
(rule__FDocumentation__NameAssignment_1)?
{ after(grammarAccess.getFDocumentationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FDocumentation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDocumentation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FDocumentation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDocumentationAccess().getTextAssignment_2()); }
(rule__FDocumentation__TextAssignment_2)
{ after(grammarAccess.getFDocumentationAccess().getTextAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FFlow__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FFlow__Group__0__Impl
	rule__FFlow__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FFlow__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFFlowAccess().getFlowKeyword_0()); }

	'flow' 

{ after(grammarAccess.getFFlowAccess().getFlowKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FFlow__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FFlow__Group__1__Impl
	rule__FFlow__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FFlow__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFFlowAccess().getNameAssignment_1()); }
(rule__FFlow__NameAssignment_1)?
{ after(grammarAccess.getFFlowAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FFlow__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FFlow__Group__2__Impl
	rule__FFlow__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FFlow__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFFlowAccess().getLabelAssignment_2()); }
(rule__FFlow__LabelAssignment_2)?
{ after(grammarAccess.getFFlowAccess().getLabelAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FFlow__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FFlow__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FFlow__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFFlowAccess().getGroup_3()); }
(rule__FFlow__Group_3__0)
{ after(grammarAccess.getFFlowAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FFlow__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FFlow__Group_3__0__Impl
	rule__FFlow__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FFlow__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFFlowAccess().getToKeyword_3_0()); }

	'to' 

{ after(grammarAccess.getFFlowAccess().getToKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FFlow__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FFlow__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FFlow__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFFlowAccess().getTargetRefAssignment_3_1()); }
(rule__FFlow__TargetRefAssignment_3_1)
{ after(grammarAccess.getFFlowAccess().getTargetRefAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FSequenceFlow__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FSequenceFlow__Group__0__Impl
	rule__FSequenceFlow__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FSequenceFlow__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFSequenceFlowAccess().getSequenceFlowKeyword_0()); }

	'sequence flow' 

{ after(grammarAccess.getFSequenceFlowAccess().getSequenceFlowKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FSequenceFlow__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FSequenceFlow__Group__1__Impl
	rule__FSequenceFlow__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FSequenceFlow__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFSequenceFlowAccess().getNameAssignment_1()); }
(rule__FSequenceFlow__NameAssignment_1)?
{ after(grammarAccess.getFSequenceFlowAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FSequenceFlow__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FSequenceFlow__Group__2__Impl
	rule__FSequenceFlow__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FSequenceFlow__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFSequenceFlowAccess().getLabelAssignment_2()); }
(rule__FSequenceFlow__LabelAssignment_2)?
{ after(grammarAccess.getFSequenceFlowAccess().getLabelAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FSequenceFlow__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FSequenceFlow__Group__3__Impl
	rule__FSequenceFlow__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FSequenceFlow__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFSequenceFlowAccess().getGroup_3()); }
(rule__FSequenceFlow__Group_3__0)
{ after(grammarAccess.getFSequenceFlowAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FSequenceFlow__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FSequenceFlow__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FSequenceFlow__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFSequenceFlowAccess().getGroup_4()); }
(rule__FSequenceFlow__Group_4__0)
{ after(grammarAccess.getFSequenceFlowAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__FSequenceFlow__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FSequenceFlow__Group_3__0__Impl
	rule__FSequenceFlow__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FSequenceFlow__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFSequenceFlowAccess().getFromKeyword_3_0()); }

	'from' 

{ after(grammarAccess.getFSequenceFlowAccess().getFromKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FSequenceFlow__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FSequenceFlow__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FSequenceFlow__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFSequenceFlowAccess().getSourceRefAssignment_3_1()); }
(rule__FSequenceFlow__SourceRefAssignment_3_1)
{ after(grammarAccess.getFSequenceFlowAccess().getSourceRefAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FSequenceFlow__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FSequenceFlow__Group_4__0__Impl
	rule__FSequenceFlow__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FSequenceFlow__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFSequenceFlowAccess().getToKeyword_4_0()); }

	'to' 

{ after(grammarAccess.getFSequenceFlowAccess().getToKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FSequenceFlow__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FSequenceFlow__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FSequenceFlow__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFSequenceFlowAccess().getTargetRefAssignment_4_1()); }
(rule__FSequenceFlow__TargetRefAssignment_4_1)
{ after(grammarAccess.getFSequenceFlowAccess().getTargetRefAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FDiDiagram__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDiDiagram__Group__0__Impl
	rule__FDiDiagram__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FDiDiagram__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiDiagramAccess().getDiagramKeyword_0()); }

	'diagram' 

{ after(grammarAccess.getFDiDiagramAccess().getDiagramKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FDiDiagram__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDiDiagram__Group__1__Impl
	rule__FDiDiagram__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FDiDiagram__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiDiagramAccess().getNameAssignment_1()); }
(rule__FDiDiagram__NameAssignment_1)?
{ after(grammarAccess.getFDiDiagramAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FDiDiagram__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDiDiagram__Group__2__Impl
	rule__FDiDiagram__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FDiDiagram__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiDiagramAccess().getLabelAssignment_2()); }
(rule__FDiDiagram__LabelAssignment_2)?
{ after(grammarAccess.getFDiDiagramAccess().getLabelAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FDiDiagram__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDiDiagram__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FDiDiagram__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiDiagramAccess().getPlaneAssignment_3()); }
(rule__FDiDiagram__PlaneAssignment_3)
{ after(grammarAccess.getFDiDiagramAccess().getPlaneAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FDiPlane__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDiPlane__Group__0__Impl
	rule__FDiPlane__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FDiPlane__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiPlaneAccess().getPlaneKeyword_0()); }

	'plane' 

{ after(grammarAccess.getFDiPlaneAccess().getPlaneKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FDiPlane__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDiPlane__Group__1__Impl
	rule__FDiPlane__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FDiPlane__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiPlaneAccess().getNameAssignment_1()); }
(rule__FDiPlane__NameAssignment_1)?
{ after(grammarAccess.getFDiPlaneAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FDiPlane__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDiPlane__Group__2__Impl
	rule__FDiPlane__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FDiPlane__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiPlaneAccess().getGroup_2()); }
(rule__FDiPlane__Group_2__0)?
{ after(grammarAccess.getFDiPlaneAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FDiPlane__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDiPlane__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FDiPlane__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getFDiPlaneAccess().getPlaneElementsAssignment_3()); }
(rule__FDiPlane__PlaneElementsAssignment_3)
{ after(grammarAccess.getFDiPlaneAccess().getPlaneElementsAssignment_3()); }
)
(
{ before(grammarAccess.getFDiPlaneAccess().getPlaneElementsAssignment_3()); }
(rule__FDiPlane__PlaneElementsAssignment_3)*
{ after(grammarAccess.getFDiPlaneAccess().getPlaneElementsAssignment_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FDiPlane__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDiPlane__Group_2__0__Impl
	rule__FDiPlane__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FDiPlane__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiPlaneAccess().getForKeyword_2_0()); }

	'for' 

{ after(grammarAccess.getFDiPlaneAccess().getForKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FDiPlane__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDiPlane__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FDiPlane__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiPlaneAccess().getBpmnElementAssignment_2_1()); }
(rule__FDiPlane__BpmnElementAssignment_2_1)
{ after(grammarAccess.getFDiPlaneAccess().getBpmnElementAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FDiShape__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDiShape__Group__0__Impl
	rule__FDiShape__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FDiShape__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiShapeAccess().getShapeKeyword_0()); }

	'shape' 

{ after(grammarAccess.getFDiShapeAccess().getShapeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FDiShape__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDiShape__Group__1__Impl
	rule__FDiShape__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FDiShape__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiShapeAccess().getNameAssignment_1()); }
(rule__FDiShape__NameAssignment_1)?
{ after(grammarAccess.getFDiShapeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FDiShape__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDiShape__Group__2__Impl
	rule__FDiShape__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FDiShape__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiShapeAccess().getGroup_2()); }
(rule__FDiShape__Group_2__0)?
{ after(grammarAccess.getFDiShapeAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FDiShape__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDiShape__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FDiShape__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiShapeAccess().getUnorderedGroup_3()); }
(rule__FDiShape__UnorderedGroup_3)
{ after(grammarAccess.getFDiShapeAccess().getUnorderedGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FDiShape__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDiShape__Group_2__0__Impl
	rule__FDiShape__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FDiShape__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiShapeAccess().getForKeyword_2_0()); }

	'for' 

{ after(grammarAccess.getFDiShapeAccess().getForKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FDiShape__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDiShape__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FDiShape__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiShapeAccess().getFlowNodeAssignment_2_1()); }
(rule__FDiShape__FlowNodeAssignment_2_1)
{ after(grammarAccess.getFDiShapeAccess().getFlowNodeAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FDiEdge__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDiEdge__Group__0__Impl
	rule__FDiEdge__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FDiEdge__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiEdgeAccess().getEdgeKeyword_0()); }

	'edge' 

{ after(grammarAccess.getFDiEdgeAccess().getEdgeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FDiEdge__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDiEdge__Group__1__Impl
	rule__FDiEdge__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FDiEdge__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiEdgeAccess().getNameAssignment_1()); }
(rule__FDiEdge__NameAssignment_1)
{ after(grammarAccess.getFDiEdgeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FDiEdge__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDiEdge__Group__2__Impl
	rule__FDiEdge__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FDiEdge__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiEdgeAccess().getGroup_2()); }
(rule__FDiEdge__Group_2__0)
{ after(grammarAccess.getFDiEdgeAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FDiEdge__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDiEdge__Group__3__Impl
	rule__FDiEdge__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FDiEdge__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiEdgeAccess().getGroup_3()); }
(rule__FDiEdge__Group_3__0)
{ after(grammarAccess.getFDiEdgeAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FDiEdge__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDiEdge__Group__4__Impl
	rule__FDiEdge__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FDiEdge__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiEdgeAccess().getGroup_4()); }
(rule__FDiEdge__Group_4__0)
{ after(grammarAccess.getFDiEdgeAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FDiEdge__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDiEdge__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FDiEdge__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getFDiEdgeAccess().getWaypointsAssignment_5()); }
(rule__FDiEdge__WaypointsAssignment_5)
{ after(grammarAccess.getFDiEdgeAccess().getWaypointsAssignment_5()); }
)
(
{ before(grammarAccess.getFDiEdgeAccess().getWaypointsAssignment_5()); }
(rule__FDiEdge__WaypointsAssignment_5)*
{ after(grammarAccess.getFDiEdgeAccess().getWaypointsAssignment_5()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}














rule__FDiEdge__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDiEdge__Group_2__0__Impl
	rule__FDiEdge__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FDiEdge__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiEdgeAccess().getForKeyword_2_0()); }

	'for' 

{ after(grammarAccess.getFDiEdgeAccess().getForKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FDiEdge__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDiEdge__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FDiEdge__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiEdgeAccess().getSequenceFlowAssignment_2_1()); }
(rule__FDiEdge__SequenceFlowAssignment_2_1)
{ after(grammarAccess.getFDiEdgeAccess().getSequenceFlowAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FDiEdge__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDiEdge__Group_3__0__Impl
	rule__FDiEdge__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FDiEdge__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiEdgeAccess().getFromKeyword_3_0()); }

	'from' 

{ after(grammarAccess.getFDiEdgeAccess().getFromKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FDiEdge__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDiEdge__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FDiEdge__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiEdgeAccess().getSourceDiagramShapeAssignment_3_1()); }
(rule__FDiEdge__SourceDiagramShapeAssignment_3_1)
{ after(grammarAccess.getFDiEdgeAccess().getSourceDiagramShapeAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FDiEdge__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDiEdge__Group_4__0__Impl
	rule__FDiEdge__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FDiEdge__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiEdgeAccess().getToKeyword_4_0()); }

	'to' 

{ after(grammarAccess.getFDiEdgeAccess().getToKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FDiEdge__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDiEdge__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FDiEdge__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiEdgeAccess().getTargetDiagramShapeAssignment_4_1()); }
(rule__FDiEdge__TargetDiagramShapeAssignment_4_1)
{ after(grammarAccess.getFDiEdgeAccess().getTargetDiagramShapeAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FDiBounds__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDiBounds__Group__0__Impl
	rule__FDiBounds__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FDiBounds__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiBoundsAccess().getBoundsKeyword_0()); }

	'bounds' 

{ after(grammarAccess.getFDiBoundsAccess().getBoundsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FDiBounds__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDiBounds__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FDiBounds__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiBoundsAccess().getUnorderedGroup_1()); }
(rule__FDiBounds__UnorderedGroup_1)
{ after(grammarAccess.getFDiBoundsAccess().getUnorderedGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FDiBounds__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDiBounds__Group_1_0__0__Impl
	rule__FDiBounds__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FDiBounds__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiBoundsAccess().getXKeyword_1_0_0()); }

	'x' 

{ after(grammarAccess.getFDiBoundsAccess().getXKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FDiBounds__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDiBounds__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FDiBounds__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiBoundsAccess().getXAssignment_1_0_1()); }
(rule__FDiBounds__XAssignment_1_0_1)
{ after(grammarAccess.getFDiBoundsAccess().getXAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FDiBounds__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDiBounds__Group_1_1__0__Impl
	rule__FDiBounds__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FDiBounds__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiBoundsAccess().getYKeyword_1_1_0()); }

	'y' 

{ after(grammarAccess.getFDiBoundsAccess().getYKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FDiBounds__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDiBounds__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FDiBounds__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiBoundsAccess().getYAssignment_1_1_1()); }
(rule__FDiBounds__YAssignment_1_1_1)
{ after(grammarAccess.getFDiBoundsAccess().getYAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FDiBounds__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDiBounds__Group_1_2__0__Impl
	rule__FDiBounds__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FDiBounds__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiBoundsAccess().getWidthKeyword_1_2_0()); }

	'width' 

{ after(grammarAccess.getFDiBoundsAccess().getWidthKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FDiBounds__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDiBounds__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FDiBounds__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiBoundsAccess().getWidthAssignment_1_2_1()); }
(rule__FDiBounds__WidthAssignment_1_2_1)
{ after(grammarAccess.getFDiBoundsAccess().getWidthAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FDiBounds__Group_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDiBounds__Group_1_3__0__Impl
	rule__FDiBounds__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FDiBounds__Group_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiBoundsAccess().getHeightKeyword_1_3_0()); }

	'height' 

{ after(grammarAccess.getFDiBoundsAccess().getHeightKeyword_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FDiBounds__Group_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDiBounds__Group_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FDiBounds__Group_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiBoundsAccess().getHeightAssignment_1_3_1()); }
(rule__FDiBounds__HeightAssignment_1_3_1)
{ after(grammarAccess.getFDiBoundsAccess().getHeightAssignment_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FDiWaypoint__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDiWaypoint__Group__0__Impl
	rule__FDiWaypoint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FDiWaypoint__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiWaypointAccess().getWaypointKeyword_0()); }

	'waypoint' 

{ after(grammarAccess.getFDiWaypointAccess().getWaypointKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FDiWaypoint__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDiWaypoint__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FDiWaypoint__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiWaypointAccess().getUnorderedGroup_1()); }
(rule__FDiWaypoint__UnorderedGroup_1)
{ after(grammarAccess.getFDiWaypointAccess().getUnorderedGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FDiWaypoint__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDiWaypoint__Group_1_0__0__Impl
	rule__FDiWaypoint__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FDiWaypoint__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiWaypointAccess().getXKeyword_1_0_0()); }

	'x' 

{ after(grammarAccess.getFDiWaypointAccess().getXKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FDiWaypoint__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDiWaypoint__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FDiWaypoint__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiWaypointAccess().getXAssignment_1_0_1()); }
(rule__FDiWaypoint__XAssignment_1_0_1)
{ after(grammarAccess.getFDiWaypointAccess().getXAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FDiWaypoint__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDiWaypoint__Group_1_1__0__Impl
	rule__FDiWaypoint__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FDiWaypoint__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiWaypointAccess().getYKeyword_1_1_0()); }

	'y' 

{ after(grammarAccess.getFDiWaypointAccess().getYKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FDiWaypoint__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDiWaypoint__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FDiWaypoint__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiWaypointAccess().getYAssignment_1_1_1()); }
(rule__FDiWaypoint__YAssignment_1_1_1)
{ after(grammarAccess.getFDiWaypointAccess().getYAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FExtActor__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FExtActor__Group__0__Impl
	rule__FExtActor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FExtActor__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFExtActorAccess().getActorKeyword_0()); }

	'actor' 

{ after(grammarAccess.getFExtActorAccess().getActorKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FExtActor__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FExtActor__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FExtActor__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFExtActorAccess().getNameAssignment_1()); }
(rule__FExtActor__NameAssignment_1)
{ after(grammarAccess.getFExtActorAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FExtUseCase__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FExtUseCase__Group__0__Impl
	rule__FExtUseCase__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FExtUseCase__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFExtUseCaseAccess().getUsecaseKeyword_0()); }

	'usecase' 

{ after(grammarAccess.getFExtUseCaseAccess().getUsecaseKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FExtUseCase__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FExtUseCase__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FExtUseCase__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFExtUseCaseAccess().getNameAssignment_1()); }
(rule__FExtUseCase__NameAssignment_1)
{ after(grammarAccess.getFExtUseCaseAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FExtPage__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FExtPage__Group__0__Impl
	rule__FExtPage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FExtPage__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFExtPageAccess().getPageKeyword_0()); }

	'page' 

{ after(grammarAccess.getFExtPageAccess().getPageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FExtPage__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FExtPage__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FExtPage__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFExtPageAccess().getNameAssignment_1()); }
(rule__FExtPage__NameAssignment_1)
{ after(grammarAccess.getFExtPageAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FExtDialog__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FExtDialog__Group__0__Impl
	rule__FExtDialog__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FExtDialog__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFExtDialogAccess().getDialogKeyword_0()); }

	'dialog' 

{ after(grammarAccess.getFExtDialogAccess().getDialogKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FExtDialog__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FExtDialog__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FExtDialog__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFExtDialogAccess().getNameAssignment_1()); }
(rule__FExtDialog__NameAssignment_1)
{ after(grammarAccess.getFExtDialogAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FExtDataType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FExtDataType__Group__0__Impl
	rule__FExtDataType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FExtDataType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFExtDataTypeAccess().getDatatypeKeyword_0()); }

	'datatype' 

{ after(grammarAccess.getFExtDataTypeAccess().getDatatypeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FExtDataType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FExtDataType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FExtDataType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFExtDataTypeAccess().getNameAssignment_1()); }
(rule__FExtDataType__NameAssignment_1)
{ after(grammarAccess.getFExtDataTypeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__FDiShape__UnorderedGroup_3
    @init {
    	int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getFDiShapeAccess().getUnorderedGroup_3());
    }
:
	rule__FDiShape__UnorderedGroup_3__0
	
	{getUnorderedGroupHelper().canLeave(grammarAccess.getFDiShapeAccess().getUnorderedGroup_3())}?
	
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getFDiShapeAccess().getUnorderedGroup_3());
	restoreStackSize(stackSize);
}


rule__FDiShape__UnorderedGroup_3__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
    }
:
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getFDiShapeAccess().getUnorderedGroup_3(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getFDiShapeAccess().getUnorderedGroup_3(), 0);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getFDiShapeAccess().getBoundsAssignment_3_0()); }
						(rule__FDiShape__BoundsAssignment_3_0)
						{ after(grammarAccess.getFDiShapeAccess().getBoundsAssignment_3_0()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getFDiShapeAccess().getUnorderedGroup_3(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getFDiShapeAccess().getUnorderedGroup_3(), 1);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getFDiShapeAccess().getIsExpandedAssignment_3_1()); }
						(rule__FDiShape__IsExpandedAssignment_3_1)
						{ after(grammarAccess.getFDiShapeAccess().getIsExpandedAssignment_3_1()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getFDiShapeAccess().getUnorderedGroup_3(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getFDiShapeAccess().getUnorderedGroup_3(), 2);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getFDiShapeAccess().getIsHorizontalAssignment_3_2()); }
						(rule__FDiShape__IsHorizontalAssignment_3_2)
						{ after(grammarAccess.getFDiShapeAccess().getIsHorizontalAssignment_3_2()); }
					)
 				)
			)  

		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getFDiShapeAccess().getUnorderedGroup_3());
	restoreStackSize(stackSize);
}


rule__FDiShape__UnorderedGroup_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDiShape__UnorderedGroup_3__Impl
	rule__FDiShape__UnorderedGroup_3__1?
;
finally {
	restoreStackSize(stackSize);
}


rule__FDiShape__UnorderedGroup_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDiShape__UnorderedGroup_3__Impl
	rule__FDiShape__UnorderedGroup_3__2?
;
finally {
	restoreStackSize(stackSize);
}


rule__FDiShape__UnorderedGroup_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDiShape__UnorderedGroup_3__Impl
;
finally {
	restoreStackSize(stackSize);
}








rule__FDiBounds__UnorderedGroup_1
    @init {
    	int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getFDiBoundsAccess().getUnorderedGroup_1());
    }
:
	rule__FDiBounds__UnorderedGroup_1__0
	
	{getUnorderedGroupHelper().canLeave(grammarAccess.getFDiBoundsAccess().getUnorderedGroup_1())}?
	
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getFDiBoundsAccess().getUnorderedGroup_1());
	restoreStackSize(stackSize);
}


rule__FDiBounds__UnorderedGroup_1__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
    }
:
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getFDiBoundsAccess().getUnorderedGroup_1(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getFDiBoundsAccess().getUnorderedGroup_1(), 0);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getFDiBoundsAccess().getGroup_1_0()); }
						(rule__FDiBounds__Group_1_0__0)
						{ after(grammarAccess.getFDiBoundsAccess().getGroup_1_0()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getFDiBoundsAccess().getUnorderedGroup_1(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getFDiBoundsAccess().getUnorderedGroup_1(), 1);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getFDiBoundsAccess().getGroup_1_1()); }
						(rule__FDiBounds__Group_1_1__0)
						{ after(grammarAccess.getFDiBoundsAccess().getGroup_1_1()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getFDiBoundsAccess().getUnorderedGroup_1(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getFDiBoundsAccess().getUnorderedGroup_1(), 2);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getFDiBoundsAccess().getGroup_1_2()); }
						(rule__FDiBounds__Group_1_2__0)
						{ after(grammarAccess.getFDiBoundsAccess().getGroup_1_2()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getFDiBoundsAccess().getUnorderedGroup_1(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getFDiBoundsAccess().getUnorderedGroup_1(), 3);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getFDiBoundsAccess().getGroup_1_3()); }
						(rule__FDiBounds__Group_1_3__0)
						{ after(grammarAccess.getFDiBoundsAccess().getGroup_1_3()); }
					)
 				)
			)  

		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getFDiBoundsAccess().getUnorderedGroup_1());
	restoreStackSize(stackSize);
}


rule__FDiBounds__UnorderedGroup_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDiBounds__UnorderedGroup_1__Impl
	rule__FDiBounds__UnorderedGroup_1__1?
;
finally {
	restoreStackSize(stackSize);
}


rule__FDiBounds__UnorderedGroup_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDiBounds__UnorderedGroup_1__Impl
	rule__FDiBounds__UnorderedGroup_1__2?
;
finally {
	restoreStackSize(stackSize);
}


rule__FDiBounds__UnorderedGroup_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDiBounds__UnorderedGroup_1__Impl
	rule__FDiBounds__UnorderedGroup_1__3?
;
finally {
	restoreStackSize(stackSize);
}


rule__FDiBounds__UnorderedGroup_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDiBounds__UnorderedGroup_1__Impl
;
finally {
	restoreStackSize(stackSize);
}










rule__FDiWaypoint__UnorderedGroup_1
    @init {
    	int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getFDiWaypointAccess().getUnorderedGroup_1());
    }
:
	rule__FDiWaypoint__UnorderedGroup_1__0
	
	{getUnorderedGroupHelper().canLeave(grammarAccess.getFDiWaypointAccess().getUnorderedGroup_1())}?
	
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getFDiWaypointAccess().getUnorderedGroup_1());
	restoreStackSize(stackSize);
}


rule__FDiWaypoint__UnorderedGroup_1__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
    }
:
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getFDiWaypointAccess().getUnorderedGroup_1(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getFDiWaypointAccess().getUnorderedGroup_1(), 0);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getFDiWaypointAccess().getGroup_1_0()); }
						(rule__FDiWaypoint__Group_1_0__0)
						{ after(grammarAccess.getFDiWaypointAccess().getGroup_1_0()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getFDiWaypointAccess().getUnorderedGroup_1(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getFDiWaypointAccess().getUnorderedGroup_1(), 1);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getFDiWaypointAccess().getGroup_1_1()); }
						(rule__FDiWaypoint__Group_1_1__0)
						{ after(grammarAccess.getFDiWaypointAccess().getGroup_1_1()); }
					)
 				)
			)  

		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getFDiWaypointAccess().getUnorderedGroup_1());
	restoreStackSize(stackSize);
}


rule__FDiWaypoint__UnorderedGroup_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDiWaypoint__UnorderedGroup_1__Impl
	rule__FDiWaypoint__UnorderedGroup_1__1?
;
finally {
	restoreStackSize(stackSize);
}


rule__FDiWaypoint__UnorderedGroup_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDiWaypoint__UnorderedGroup_1__Impl
;
finally {
	restoreStackSize(stackSize);
}






rule__FDocumentRoot__ExternalRefsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDocumentRootAccess().getExternalRefsFExternalParserRuleCall_0_0()); }
	ruleFExternal{ after(grammarAccess.getFDocumentRootAccess().getExternalRefsFExternalParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FDocumentRoot__PackagesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDocumentRootAccess().getPackagesFProcessPackageDeclParserRuleCall_1_0()); }
	ruleFProcessPackageDecl{ after(grammarAccess.getFDocumentRootAccess().getPackagesFProcessPackageDeclParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FProcessPackageDecl__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFProcessPackageDeclAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getFProcessPackageDeclAccess().getNameQualifiedNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FProcessPackageDecl__LabelAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFProcessPackageDeclAccess().getLabelSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getFProcessPackageDeclAccess().getLabelSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FProcessPackageDecl__ProcessesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFProcessPackageDeclAccess().getProcessesFProcessParserRuleCall_3_0()); }
	ruleFProcess{ after(grammarAccess.getFProcessPackageDeclAccess().getProcessesFProcessParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FProcess__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFProcessAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getFProcessAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FProcess__LabelAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFProcessAccess().getLabelSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getFProcessAccess().getLabelSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FProcess__UsecaseAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFProcessAccess().getUsecaseFExtUseCaseCrossReference_3_1_0()); }
(
{ before(grammarAccess.getFProcessAccess().getUsecaseFExtUseCaseQualifiedNameParserRuleCall_3_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getFProcessAccess().getUsecaseFExtUseCaseQualifiedNameParserRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getFProcessAccess().getUsecaseFExtUseCaseCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FProcess__PoolsAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFProcessAccess().getPoolsFPoolParserRuleCall_4_0_0()); }
	ruleFPool{ after(grammarAccess.getFProcessAccess().getPoolsFPoolParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FProcess__FlowNodesAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFProcessAccess().getFlowNodesFFlowNodeParserRuleCall_4_1_0()); }
	ruleFFlowNode{ after(grammarAccess.getFProcessAccess().getFlowNodesFFlowNodeParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FPool__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFPoolAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getFPoolAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FPool__LabelAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFPoolAccess().getLabelSTRINGTerminalRuleCall_3_0()); }
	RULE_STRING{ after(grammarAccess.getFPoolAccess().getLabelSTRINGTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FPool__ActorAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFPoolAccess().getActorFExtActorCrossReference_4_1_0()); }
(
{ before(grammarAccess.getFPoolAccess().getActorFExtActorQualifiedNameParserRuleCall_4_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getFPoolAccess().getActorFExtActorQualifiedNameParserRuleCall_4_1_0_1()); }
)
{ after(grammarAccess.getFPoolAccess().getActorFExtActorCrossReference_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FPool__InitializingAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFPoolAccess().getInitializingInitializingKeyword_5_0()); }
(
{ before(grammarAccess.getFPoolAccess().getInitializingInitializingKeyword_5_0()); }

	'initializing' 

{ after(grammarAccess.getFPoolAccess().getInitializingInitializingKeyword_5_0()); }
)

{ after(grammarAccess.getFPoolAccess().getInitializingInitializingKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FPool__FlowNodesAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFPoolAccess().getFlowNodesFFlowNodeParserRuleCall_6_0()); }
	ruleFFlowNode{ after(grammarAccess.getFPoolAccess().getFlowNodesFFlowNodeParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FLane__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFLaneAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getFLaneAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FLane__LabelAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFLaneAccess().getLabelSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getFLaneAccess().getLabelSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FLane__ActorAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFLaneAccess().getActorFExtActorCrossReference_3_1_0()); }
(
{ before(grammarAccess.getFLaneAccess().getActorFExtActorQualifiedNameParserRuleCall_3_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getFLaneAccess().getActorFExtActorQualifiedNameParserRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getFLaneAccess().getActorFExtActorCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FLane__InitializingAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFLaneAccess().getInitializingInitializingKeyword_4_0()); }
(
{ before(grammarAccess.getFLaneAccess().getInitializingInitializingKeyword_4_0()); }

	'initializing' 

{ after(grammarAccess.getFLaneAccess().getInitializingInitializingKeyword_4_0()); }
)

{ after(grammarAccess.getFLaneAccess().getInitializingInitializingKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FLane__FlowNodesAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFLaneAccess().getFlowNodesFFlowNodeParserRuleCall_5_0()); }
	ruleFFlowNode{ after(grammarAccess.getFLaneAccess().getFlowNodesFFlowNodeParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FEvent__EventTypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFEventAccess().getEventTypeFEventTypeEnumRuleCall_0_0()); }
	ruleFEventType{ after(grammarAccess.getFEventAccess().getEventTypeFEventTypeEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FEvent__EventDefinitionTypeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFEventAccess().getEventDefinitionTypeFEventDefinitionTypeEnumRuleCall_1_1_0()); }
	ruleFEventDefinitionType{ after(grammarAccess.getFEventAccess().getEventDefinitionTypeFEventDefinitionTypeEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FEvent__NonInterruptingAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFEventAccess().getNonInterruptingNonInterruptingKeyword_2_0()); }
(
{ before(grammarAccess.getFEventAccess().getNonInterruptingNonInterruptingKeyword_2_0()); }

	'non-interrupting' 

{ after(grammarAccess.getFEventAccess().getNonInterruptingNonInterruptingKeyword_2_0()); }
)

{ after(grammarAccess.getFEventAccess().getNonInterruptingNonInterruptingKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FEvent__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFEventAccess().getNameIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getFEventAccess().getNameIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FEvent__LabelAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFEventAccess().getLabelSTRINGTerminalRuleCall_4_0()); }
	RULE_STRING{ after(grammarAccess.getFEventAccess().getLabelSTRINGTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FEvent__DialogAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFEventAccess().getDialogFExtPageCrossReference_5_1_0()); }
(
{ before(grammarAccess.getFEventAccess().getDialogFExtPageQualifiedNameParserRuleCall_5_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getFEventAccess().getDialogFExtPageQualifiedNameParserRuleCall_5_1_0_1()); }
)
{ after(grammarAccess.getFEventAccess().getDialogFExtPageCrossReference_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FEvent__AttachmentsAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFEventAccess().getAttachmentsFAttachmentParserRuleCall_6_0()); }
	ruleFAttachment{ after(grammarAccess.getFEventAccess().getAttachmentsFAttachmentParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FTask__TaskTypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFTaskAccess().getTaskTypeFTaskTypeEnumRuleCall_0_0()); }
	ruleFTaskType{ after(grammarAccess.getFTaskAccess().getTaskTypeFTaskTypeEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FTask__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFTaskAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getFTaskAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FTask__LabelAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFTaskAccess().getLabelSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getFTaskAccess().getLabelSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FTask__DialogAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFTaskAccess().getDialogFExtDialogCrossReference_3_1_0()); }
(
{ before(grammarAccess.getFTaskAccess().getDialogFExtDialogQualifiedNameParserRuleCall_3_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getFTaskAccess().getDialogFExtDialogQualifiedNameParserRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getFTaskAccess().getDialogFExtDialogCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FTask__AttachmentsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFTaskAccess().getAttachmentsFAttachmentParserRuleCall_4_0()); }
	ruleFAttachment{ after(grammarAccess.getFTaskAccess().getAttachmentsFAttachmentParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FCallActivity__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFCallActivityAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getFCallActivityAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FCallActivity__LabelAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFCallActivityAccess().getLabelSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getFCallActivityAccess().getLabelSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FCallActivity__CalledElementAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFCallActivityAccess().getCalledElementFProcessCrossReference_3_1_0()); }
(
{ before(grammarAccess.getFCallActivityAccess().getCalledElementFProcessQualifiedNameParserRuleCall_3_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getFCallActivityAccess().getCalledElementFProcessQualifiedNameParserRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getFCallActivityAccess().getCalledElementFProcessCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FCallActivity__AttachmentsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFCallActivityAccess().getAttachmentsFAttachmentParserRuleCall_4_0()); }
	ruleFAttachment{ after(grammarAccess.getFCallActivityAccess().getAttachmentsFAttachmentParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FSubProcess__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFSubProcessAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getFSubProcessAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FSubProcess__LabelAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFSubProcessAccess().getLabelSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getFSubProcessAccess().getLabelSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FSubProcess__AttachmentsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFSubProcessAccess().getAttachmentsFAttachmentParserRuleCall_3_0()); }
	ruleFAttachment{ after(grammarAccess.getFSubProcessAccess().getAttachmentsFAttachmentParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FSubProcess__FlowNodesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFSubProcessAccess().getFlowNodesFFlowNodeParserRuleCall_4_0()); }
	ruleFFlowNode{ after(grammarAccess.getFSubProcessAccess().getFlowNodesFFlowNodeParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FGatewayDiverging__GatewayTypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFGatewayDivergingAccess().getGatewayTypeFGatewayTypeEnumRuleCall_0_0()); }
	ruleFGatewayType{ after(grammarAccess.getFGatewayDivergingAccess().getGatewayTypeFGatewayTypeEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FGatewayDiverging__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFGatewayDivergingAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getFGatewayDivergingAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FGatewayDiverging__LabelAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFGatewayDivergingAccess().getLabelSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getFGatewayDivergingAccess().getLabelSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FGatewayDiverging__AttachmentsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFGatewayDivergingAccess().getAttachmentsFAttachmentParserRuleCall_3_0()); }
	ruleFAttachment{ after(grammarAccess.getFGatewayDivergingAccess().getAttachmentsFAttachmentParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FGatewayDiverging__OptionsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFGatewayDivergingAccess().getOptionsFOptionParserRuleCall_4_0()); }
	ruleFOption{ after(grammarAccess.getFGatewayDivergingAccess().getOptionsFOptionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FGatewayDiverging__GatewayConvergingAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFGatewayDivergingAccess().getGatewayConvergingFGatewayConvergingParserRuleCall_5_0()); }
	ruleFGatewayConverging{ after(grammarAccess.getFGatewayDivergingAccess().getGatewayConvergingFGatewayConvergingParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FGatewayConverging__GatewayTypeAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFGatewayConvergingAccess().getGatewayTypeFGatewayTypeEnumRuleCall_0_1_0()); }
	ruleFGatewayType{ after(grammarAccess.getFGatewayConvergingAccess().getGatewayTypeFGatewayTypeEnumRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FGatewayConverging__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFGatewayConvergingAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getFGatewayConvergingAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FGatewayConverging__LabelAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFGatewayConvergingAccess().getLabelSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getFGatewayConvergingAccess().getLabelSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FGatewayConverging__AttachmentsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFGatewayConvergingAccess().getAttachmentsFAttachmentParserRuleCall_3_0()); }
	ruleFAttachment{ after(grammarAccess.getFGatewayConvergingAccess().getAttachmentsFAttachmentParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FOption__DefaultAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFOptionAccess().getDefaultDefaultKeyword_2_0()); }
(
{ before(grammarAccess.getFOptionAccess().getDefaultDefaultKeyword_2_0()); }

	'default' 

{ after(grammarAccess.getFOptionAccess().getDefaultDefaultKeyword_2_0()); }
)

{ after(grammarAccess.getFOptionAccess().getDefaultDefaultKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FOption__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFOptionAccess().getNameIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getFOptionAccess().getNameIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FOption__LabelAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFOptionAccess().getLabelSTRINGTerminalRuleCall_4_0()); }
	RULE_STRING{ after(grammarAccess.getFOptionAccess().getLabelSTRINGTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FOption__FlowNodesAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFOptionAccess().getFlowNodesFOptionFlowNodeParserRuleCall_5_0()); }
	ruleFOptionFlowNode{ after(grammarAccess.getFOptionAccess().getFlowNodesFOptionFlowNodeParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FSendMessage__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFSendMessageAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getFSendMessageAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FSendMessage__LabelAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFSendMessageAccess().getLabelSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getFSendMessageAccess().getLabelSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FSendMessage__ReceivingElementAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFSendMessageAccess().getReceivingElementFInteractionNodeCrossReference_3_1_0()); }
(
{ before(grammarAccess.getFSendMessageAccess().getReceivingElementFInteractionNodeQualifiedNameParserRuleCall_3_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getFSendMessageAccess().getReceivingElementFInteractionNodeQualifiedNameParserRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getFSendMessageAccess().getReceivingElementFInteractionNodeCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FSendMessage__DataTypeAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFSendMessageAccess().getDataTypeFExtDataTypeCrossReference_4_1_0()); }
(
{ before(grammarAccess.getFSendMessageAccess().getDataTypeFExtDataTypeQualifiedNameParserRuleCall_4_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getFSendMessageAccess().getDataTypeFExtDataTypeQualifiedNameParserRuleCall_4_1_0_1()); }
)
{ after(grammarAccess.getFSendMessageAccess().getDataTypeFExtDataTypeCrossReference_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FSendData__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFSendDataAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getFSendDataAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FSendData__LabelAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFSendDataAccess().getLabelSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getFSendDataAccess().getLabelSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FSendData__ReceivingElementAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFSendDataAccess().getReceivingElementFFlowNodeCrossReference_3_1_0()); }
(
{ before(grammarAccess.getFSendDataAccess().getReceivingElementFFlowNodeQualifiedNameParserRuleCall_3_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getFSendDataAccess().getReceivingElementFFlowNodeQualifiedNameParserRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getFSendDataAccess().getReceivingElementFFlowNodeCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FSendData__DataTypeAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFSendDataAccess().getDataTypeFExtDataTypeCrossReference_4_1_0()); }
(
{ before(grammarAccess.getFSendDataAccess().getDataTypeFExtDataTypeQualifiedNameParserRuleCall_4_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getFSendDataAccess().getDataTypeFExtDataTypeQualifiedNameParserRuleCall_4_1_0_1()); }
)
{ after(grammarAccess.getFSendDataAccess().getDataTypeFExtDataTypeCrossReference_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FDataIO__DataIoTypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDataIOAccess().getDataIoTypeFDataIOTypeEnumRuleCall_0_0()); }
	ruleFDataIOType{ after(grammarAccess.getFDataIOAccess().getDataIoTypeFDataIOTypeEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FDataIO__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDataIOAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getFDataIOAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FDataIO__LabelAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDataIOAccess().getLabelSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getFDataIOAccess().getLabelSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FDataIO__DataTypeAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDataIOAccess().getDataTypeFExtDataTypeCrossReference_3_1_0()); }
(
{ before(grammarAccess.getFDataIOAccess().getDataTypeFExtDataTypeQualifiedNameParserRuleCall_3_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getFDataIOAccess().getDataTypeFExtDataTypeQualifiedNameParserRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getFDataIOAccess().getDataTypeFExtDataTypeCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FAnnotation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFAnnotationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getFAnnotationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FAnnotation__TextAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFAnnotationAccess().getTextSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getFAnnotationAccess().getTextSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FDocumentation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDocumentationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getFDocumentationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FDocumentation__TextAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDocumentationAccess().getTextSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getFDocumentationAccess().getTextSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FFlow__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFFlowAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getFFlowAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FFlow__LabelAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFFlowAccess().getLabelSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getFFlowAccess().getLabelSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FFlow__TargetRefAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFFlowAccess().getTargetRefFFlowNodeCrossReference_3_1_0()); }
(
{ before(grammarAccess.getFFlowAccess().getTargetRefFFlowNodeQualifiedNameParserRuleCall_3_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getFFlowAccess().getTargetRefFFlowNodeQualifiedNameParserRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getFFlowAccess().getTargetRefFFlowNodeCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FSequenceFlow__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFSequenceFlowAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getFSequenceFlowAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FSequenceFlow__LabelAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFSequenceFlowAccess().getLabelSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getFSequenceFlowAccess().getLabelSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FSequenceFlow__SourceRefAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFSequenceFlowAccess().getSourceRefFFlowNodeCrossReference_3_1_0()); }
(
{ before(grammarAccess.getFSequenceFlowAccess().getSourceRefFFlowNodeQualifiedNameParserRuleCall_3_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getFSequenceFlowAccess().getSourceRefFFlowNodeQualifiedNameParserRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getFSequenceFlowAccess().getSourceRefFFlowNodeCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FSequenceFlow__TargetRefAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFSequenceFlowAccess().getTargetRefFFlowNodeCrossReference_4_1_0()); }
(
{ before(grammarAccess.getFSequenceFlowAccess().getTargetRefFFlowNodeQualifiedNameParserRuleCall_4_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getFSequenceFlowAccess().getTargetRefFFlowNodeQualifiedNameParserRuleCall_4_1_0_1()); }
)
{ after(grammarAccess.getFSequenceFlowAccess().getTargetRefFFlowNodeCrossReference_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FDiDiagram__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiDiagramAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getFDiDiagramAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FDiDiagram__LabelAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiDiagramAccess().getLabelSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getFDiDiagramAccess().getLabelSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FDiDiagram__PlaneAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiDiagramAccess().getPlaneFDiPlaneParserRuleCall_3_0()); }
	ruleFDiPlane{ after(grammarAccess.getFDiDiagramAccess().getPlaneFDiPlaneParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FDiPlane__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiPlaneAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getFDiPlaneAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FDiPlane__BpmnElementAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiPlaneAccess().getBpmnElementFProcessCrossReference_2_1_0()); }
(
{ before(grammarAccess.getFDiPlaneAccess().getBpmnElementFProcessQualifiedNameParserRuleCall_2_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getFDiPlaneAccess().getBpmnElementFProcessQualifiedNameParserRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getFDiPlaneAccess().getBpmnElementFProcessCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FDiPlane__PlaneElementsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiPlaneAccess().getPlaneElementsFDiPlaneElementParserRuleCall_3_0()); }
	ruleFDiPlaneElement{ after(grammarAccess.getFDiPlaneAccess().getPlaneElementsFDiPlaneElementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FDiShape__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiShapeAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getFDiShapeAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FDiShape__FlowNodeAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiShapeAccess().getFlowNodeFFlowNodeCrossReference_2_1_0()); }
(
{ before(grammarAccess.getFDiShapeAccess().getFlowNodeFFlowNodeQualifiedNameParserRuleCall_2_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getFDiShapeAccess().getFlowNodeFFlowNodeQualifiedNameParserRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getFDiShapeAccess().getFlowNodeFFlowNodeCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FDiShape__BoundsAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiShapeAccess().getBoundsFDiBoundsParserRuleCall_3_0_0()); }
	ruleFDiBounds{ after(grammarAccess.getFDiShapeAccess().getBoundsFDiBoundsParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FDiShape__IsExpandedAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiShapeAccess().getIsExpandedExpandedKeyword_3_1_0()); }
(
{ before(grammarAccess.getFDiShapeAccess().getIsExpandedExpandedKeyword_3_1_0()); }

	'expanded' 

{ after(grammarAccess.getFDiShapeAccess().getIsExpandedExpandedKeyword_3_1_0()); }
)

{ after(grammarAccess.getFDiShapeAccess().getIsExpandedExpandedKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FDiShape__IsHorizontalAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiShapeAccess().getIsHorizontalHorizontalKeyword_3_2_0()); }
(
{ before(grammarAccess.getFDiShapeAccess().getIsHorizontalHorizontalKeyword_3_2_0()); }

	'horizontal' 

{ after(grammarAccess.getFDiShapeAccess().getIsHorizontalHorizontalKeyword_3_2_0()); }
)

{ after(grammarAccess.getFDiShapeAccess().getIsHorizontalHorizontalKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FDiEdge__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiEdgeAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getFDiEdgeAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FDiEdge__SequenceFlowAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiEdgeAccess().getSequenceFlowFSequenceFlowCrossReference_2_1_0()); }
(
{ before(grammarAccess.getFDiEdgeAccess().getSequenceFlowFSequenceFlowQualifiedNameParserRuleCall_2_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getFDiEdgeAccess().getSequenceFlowFSequenceFlowQualifiedNameParserRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getFDiEdgeAccess().getSequenceFlowFSequenceFlowCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FDiEdge__SourceDiagramShapeAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiEdgeAccess().getSourceDiagramShapeFDiShapeCrossReference_3_1_0()); }
(
{ before(grammarAccess.getFDiEdgeAccess().getSourceDiagramShapeFDiShapeQualifiedNameParserRuleCall_3_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getFDiEdgeAccess().getSourceDiagramShapeFDiShapeQualifiedNameParserRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getFDiEdgeAccess().getSourceDiagramShapeFDiShapeCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FDiEdge__TargetDiagramShapeAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiEdgeAccess().getTargetDiagramShapeFDiShapeCrossReference_4_1_0()); }
(
{ before(grammarAccess.getFDiEdgeAccess().getTargetDiagramShapeFDiShapeQualifiedNameParserRuleCall_4_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getFDiEdgeAccess().getTargetDiagramShapeFDiShapeQualifiedNameParserRuleCall_4_1_0_1()); }
)
{ after(grammarAccess.getFDiEdgeAccess().getTargetDiagramShapeFDiShapeCrossReference_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FDiEdge__WaypointsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiEdgeAccess().getWaypointsFDiWaypointParserRuleCall_5_0()); }
	ruleFDiWaypoint{ after(grammarAccess.getFDiEdgeAccess().getWaypointsFDiWaypointParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FDiBounds__XAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiBoundsAccess().getXINTTerminalRuleCall_1_0_1_0()); }
	RULE_INT{ after(grammarAccess.getFDiBoundsAccess().getXINTTerminalRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FDiBounds__YAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiBoundsAccess().getYINTTerminalRuleCall_1_1_1_0()); }
	RULE_INT{ after(grammarAccess.getFDiBoundsAccess().getYINTTerminalRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FDiBounds__WidthAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiBoundsAccess().getWidthINTTerminalRuleCall_1_2_1_0()); }
	RULE_INT{ after(grammarAccess.getFDiBoundsAccess().getWidthINTTerminalRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FDiBounds__HeightAssignment_1_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiBoundsAccess().getHeightINTTerminalRuleCall_1_3_1_0()); }
	RULE_INT{ after(grammarAccess.getFDiBoundsAccess().getHeightINTTerminalRuleCall_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FDiWaypoint__XAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiWaypointAccess().getXINTTerminalRuleCall_1_0_1_0()); }
	RULE_INT{ after(grammarAccess.getFDiWaypointAccess().getXINTTerminalRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FDiWaypoint__YAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDiWaypointAccess().getYINTTerminalRuleCall_1_1_1_0()); }
	RULE_INT{ after(grammarAccess.getFDiWaypointAccess().getYINTTerminalRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FExtActor__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFExtActorAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getFExtActorAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FExtUseCase__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFExtUseCaseAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getFExtUseCaseAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FExtPage__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFExtPageAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getFExtPageAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FExtDialog__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFExtDialogAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getFExtDialogAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FExtDataType__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFExtDataTypeAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getFExtDataTypeAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('\u00E4'|'\u00F6'|'\u00FC'|'a'..'z'|'A'..'Z'|'\u00C4'|'\u00D6'|'\u00DC'|'_') ('\u00E4'|'\u00F6'|'\u00FC'|'\u00DF'|'a'..'z'|'\u00C4'|'\u00D6'|'\u00DC'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


